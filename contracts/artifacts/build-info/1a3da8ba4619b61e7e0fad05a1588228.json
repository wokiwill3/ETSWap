{
	"id": "1a3da8ba4619b61e7e0fad05a1588228",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"Usdt.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2020-09-04\r\n*/\r\n\r\npragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract BEP20USDT is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 public _decimals;\r\n  string public _symbol;\r\n  string public _name;\r\n\r\n  constructor() public {\r\n    _name = \"Tether USD\";\r\n    _symbol = \"USDT\";\r\n    _decimals = 18;\r\n    _totalSupply = 30000000000000000000000000;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Burn `amount` tokens and decreasing the total supply.\r\n   */\r\n  function burn(uint256 amount) public returns (bool) {\r\n    _burn(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Usdt.sol": {
				"BEP20USDT": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"Usdt.sol\":11376:19389  contract BEP20USDT is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"Usdt.sol\":11702:11951  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Usdt.sol\":11702:11951  constructor() public {\r... */\n  pop\n    /* \"Usdt.sol\":9885:9902  address msgSender */\n  0x00\n    /* \"Usdt.sol\":9905:9917  _msgSender() */\n  tag_7\n    /* \"Usdt.sol\":9905:9915  _msgSender */\n  shl(0x20, tag_8)\n    /* \"Usdt.sol\":9905:9917  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Usdt.sol\":9885:9917  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"Usdt.sol\":9933:9942  msgSender */\n  dup1\n    /* \"Usdt.sol\":9924:9930  _owner */\n  0x00\n  dup1\n    /* \"Usdt.sol\":9924:9942  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Usdt.sol\":9987:9996  msgSender */\n  dup1\n    /* \"Usdt.sol\":9954:9997  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Usdt.sol\":9983:9984  0 */\n  0x00\n    /* \"Usdt.sol\":9954:9997  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Usdt.sol\":9854:10003  constructor () internal {\r... */\n  pop\n    /* \"Usdt.sol\":11730:11750  _name = \"Tether USD\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5465746865722055534400000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Usdt.sol\":11730:11735  _name */\n  0x06\n    /* \"Usdt.sol\":11730:11750  _name = \"Tether USD\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"Usdt.sol\":11757:11773  _symbol = \"USDT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5553445400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Usdt.sol\":11757:11764  _symbol */\n  0x05\n    /* \"Usdt.sol\":11757:11773  _symbol = \"USDT\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"Usdt.sol\":11792:11794  18 */\n  0x12\n    /* \"Usdt.sol\":11780:11789  _decimals */\n  0x04\n  0x00\n    /* \"Usdt.sol\":11780:11794  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Usdt.sol\":11816:11842  30000000000000000000000000 */\n  0x18d0bf423c03d8de000000\n    /* \"Usdt.sol\":11801:11813  _totalSupply */\n  0x03\n    /* \"Usdt.sol\":11801:11842  _totalSupply = 30000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Usdt.sol\":11873:11885  _totalSupply */\n  sload(0x03)\n    /* \"Usdt.sol\":11849:11858  _balances */\n  0x01\n    /* \"Usdt.sol\":11849:11870  _balances[msg.sender] */\n  0x00\n    /* \"Usdt.sol\":11859:11869  msg.sender */\n  caller\n    /* \"Usdt.sol\":11849:11870  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Usdt.sol\":11849:11885  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Usdt.sol\":11920:11930  msg.sender */\n  caller\n    /* \"Usdt.sol\":11899:11945  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Usdt.sol\":11916:11917  0 */\n  0x00\n    /* \"Usdt.sol\":11899:11945  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"Usdt.sol\":11932:11944  _totalSupply */\n  sload(0x03)\n    /* \"Usdt.sol\":11899:11945  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Usdt.sol\":11376:19389  contract BEP20USDT is Context, IBEP20, Ownable {\r... */\n  jump(tag_13)\n    /* \"Usdt.sol\":3773:3865  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"Usdt.sol\":3818:3833  address payable */\n  0x00\n    /* \"Usdt.sol\":3849:3859  msg.sender */\n  caller\n    /* \"Usdt.sol\":3842:3859  return msg.sender */\n  swap1\n  pop\n    /* \"Usdt.sol\":3773:3865  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"Usdt.sol\":11376:19389  contract BEP20USDT is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Usdt.sol\":11376:19389  contract BEP20USDT is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Usdt.sol\":11376:19389  contract BEP20USDT is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x32424aa3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Usdt.sol\":12421:12500  function name() external view returns (string memory) {\r... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_28:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_28)\n    tag_30:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Usdt.sol\":12421:12500  function name() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":13461:13605  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"Usdt.sol\":13461:13605  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":12556:12643  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":14050:14342  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_38:\n        /* \"Usdt.sol\":14050:14342  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":12149:12228  function decimals() external view returns (uint8) {\r... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":11623:11645  uint8 public _decimals */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":14724:14924  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"Usdt.sol\":14724:14924  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":16052:16162  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_10:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"Usdt.sol\":16052:16162  function burn(uint256 amount) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":12697:12803  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n        /* \"Usdt.sol\":12697:12803  function balanceOf(address account) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":10678:10808  function renounceOwnership() public onlyOwner {\r... */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"Usdt.sol\":12011:12090  function getOwner() external view returns (address) {\r... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":10076:10149  function owner() public view returns (address) {\r... */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":12285:12368  function symbol() external view returns (string memory) {\r... */\n    tag_15:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_61:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_61)\n    tag_63:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Usdt.sol\":12285:12368  function symbol() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_64:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":15847:15967  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_16:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"Usdt.sol\":15847:15967  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":15396:15647  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_17:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"Usdt.sol\":15396:15647  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":12997:13147  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_18:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"Usdt.sol\":12997:13147  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":11650:11671  string public _symbol */\n    tag_19:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_76:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_76)\n    tag_78:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Usdt.sol\":11650:11671  string public _symbol */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_79:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":11676:11695  string public _name */\n    tag_20:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_82:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_82)\n    tag_84:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Usdt.sol\":11676:11695  string public _name */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_85:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":13201:13331  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_21:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n        /* \"Usdt.sol\":13201:13331  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Usdt.sol\":10953:11056  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_22:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n        /* \"Usdt.sol\":10953:11056  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"Usdt.sol\":12421:12500  function name() external view returns (string memory) {\r... */\n    tag_27:\n        /* \"Usdt.sol\":12460:12473  string memory */\n      0x60\n        /* \"Usdt.sol\":12489:12494  _name */\n      0x06\n        /* \"Usdt.sol\":12482:12494  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Usdt.sol\":12421:12500  function name() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"Usdt.sol\":13461:13605  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_34:\n        /* \"Usdt.sol\":13529:13533  bool */\n      0x00\n        /* \"Usdt.sol\":13542:13581  _approve(_msgSender(), spender, amount) */\n      tag_97\n        /* \"Usdt.sol\":13551:13563  _msgSender() */\n      tag_98\n        /* \"Usdt.sol\":13551:13561  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":13551:13563  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"Usdt.sol\":13565:13572  spender */\n      dup5\n        /* \"Usdt.sol\":13574:13580  amount */\n      dup5\n        /* \"Usdt.sol\":13542:13550  _approve */\n      tag_100\n        /* \"Usdt.sol\":13542:13581  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_97:\n        /* \"Usdt.sol\":13595:13599  true */\n      0x01\n        /* \"Usdt.sol\":13588:13599  return true */\n      swap1\n      pop\n        /* \"Usdt.sol\":13461:13605  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":12556:12643  function totalSupply() external view returns (uint256) {\r... */\n    tag_36:\n        /* \"Usdt.sol\":12602:12609  uint256 */\n      0x00\n        /* \"Usdt.sol\":12625:12637  _totalSupply */\n      sload(0x03)\n        /* \"Usdt.sol\":12618:12637  return _totalSupply */\n      swap1\n      pop\n        /* \"Usdt.sol\":12556:12643  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Usdt.sol\":14050:14342  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_39:\n        /* \"Usdt.sol\":14141:14145  bool */\n      0x00\n        /* \"Usdt.sol\":14154:14190  _transfer(sender, recipient, amount) */\n      tag_103\n        /* \"Usdt.sol\":14164:14170  sender */\n      dup5\n        /* \"Usdt.sol\":14172:14181  recipient */\n      dup5\n        /* \"Usdt.sol\":14183:14189  amount */\n      dup5\n        /* \"Usdt.sol\":14154:14163  _transfer */\n      tag_104\n        /* \"Usdt.sol\":14154:14190  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_103:\n        /* \"Usdt.sol\":14197:14318  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_105\n        /* \"Usdt.sol\":14206:14212  sender */\n      dup5\n        /* \"Usdt.sol\":14214:14226  _msgSender() */\n      tag_106\n        /* \"Usdt.sol\":14214:14224  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":14214:14226  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"Usdt.sol\":14228:14317  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_107\n        /* \"Usdt.sol\":14266:14272  amount */\n      dup6\n        /* \"Usdt.sol\":14228:14317  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"Usdt.sol\":14228:14239  _allowances */\n      0x02\n        /* \"Usdt.sol\":14228:14247  _allowances[sender] */\n      0x00\n        /* \"Usdt.sol\":14240:14246  sender */\n      dup12\n        /* \"Usdt.sol\":14228:14247  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":14228:14261  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"Usdt.sol\":14248:14260  _msgSender() */\n      tag_108\n        /* \"Usdt.sol\":14248:14258  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":14248:14260  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"Usdt.sol\":14228:14261  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Usdt.sol\":14228:14265  _allowances[sender][_msgSender()].sub */\n      tag_109\n      swap1\n        /* \"Usdt.sol\":14228:14317  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"Usdt.sol\":14197:14205  _approve */\n      tag_100\n        /* \"Usdt.sol\":14197:14318  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_105:\n        /* \"Usdt.sol\":14332:14336  true */\n      0x01\n        /* \"Usdt.sol\":14325:14336  return true */\n      swap1\n      pop\n        /* \"Usdt.sol\":14050:14342  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":12149:12228  function decimals() external view returns (uint8) {\r... */\n    tag_41:\n        /* \"Usdt.sol\":12192:12197  uint8 */\n      0x00\n        /* \"Usdt.sol\":12213:12222  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Usdt.sol\":12206:12222  return _decimals */\n      swap1\n      pop\n        /* \"Usdt.sol\":12149:12228  function decimals() external view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"Usdt.sol\":11623:11645  uint8 public _decimals */\n    tag_43:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Usdt.sol\":14724:14924  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_46:\n        /* \"Usdt.sol\":14804:14808  bool */\n      0x00\n        /* \"Usdt.sol\":14817:14900  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_112\n        /* \"Usdt.sol\":14826:14838  _msgSender() */\n      tag_113\n        /* \"Usdt.sol\":14826:14836  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":14826:14838  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"Usdt.sol\":14840:14847  spender */\n      dup5\n        /* \"Usdt.sol\":14849:14899  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_114\n        /* \"Usdt.sol\":14888:14898  addedValue */\n      dup6\n        /* \"Usdt.sol\":14849:14860  _allowances */\n      0x02\n        /* \"Usdt.sol\":14849:14874  _allowances[_msgSender()] */\n      0x00\n        /* \"Usdt.sol\":14861:14873  _msgSender() */\n      tag_115\n        /* \"Usdt.sol\":14861:14871  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":14861:14873  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"Usdt.sol\":14849:14874  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":14849:14883  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"Usdt.sol\":14875:14882  spender */\n      dup10\n        /* \"Usdt.sol\":14849:14883  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Usdt.sol\":14849:14887  _allowances[_msgSender()][spender].add */\n      tag_116\n      swap1\n        /* \"Usdt.sol\":14849:14899  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"Usdt.sol\":14817:14825  _approve */\n      tag_100\n        /* \"Usdt.sol\":14817:14900  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_112:\n        /* \"Usdt.sol\":14914:14918  true */\n      0x01\n        /* \"Usdt.sol\":14907:14918  return true */\n      swap1\n      pop\n        /* \"Usdt.sol\":14724:14924  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":16052:16162  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_49:\n        /* \"Usdt.sol\":16098:16102  bool */\n      0x00\n        /* \"Usdt.sol\":16111:16138  _burn(_msgSender(), amount) */\n      tag_118\n        /* \"Usdt.sol\":16117:16129  _msgSender() */\n      tag_119\n        /* \"Usdt.sol\":16117:16127  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":16117:16129  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"Usdt.sol\":16131:16137  amount */\n      dup4\n        /* \"Usdt.sol\":16111:16116  _burn */\n      tag_120\n        /* \"Usdt.sol\":16111:16138  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_118:\n        /* \"Usdt.sol\":16152:16156  true */\n      0x01\n        /* \"Usdt.sol\":16145:16156  return true */\n      swap1\n      pop\n        /* \"Usdt.sol\":16052:16162  function burn(uint256 amount) public returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":12697:12803  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_52:\n        /* \"Usdt.sol\":12756:12763  uint256 */\n      0x00\n        /* \"Usdt.sol\":12779:12788  _balances */\n      0x01\n        /* \"Usdt.sol\":12779:12797  _balances[account] */\n      0x00\n        /* \"Usdt.sol\":12789:12796  account */\n      dup4\n        /* \"Usdt.sol\":12779:12797  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Usdt.sol\":12772:12797  return _balances[account] */\n      swap1\n      pop\n        /* \"Usdt.sol\":12697:12803  function balanceOf(address account) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":10678:10808  function renounceOwnership() public onlyOwner {\r... */\n    tag_54:\n        /* \"Usdt.sol\":10280:10292  _msgSender() */\n      tag_123\n        /* \"Usdt.sol\":10280:10290  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"Usdt.sol\":10270:10292  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":10270:10276  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":10270:10292  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Usdt.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"Usdt.sol\":10773:10774  0 */\n      0x00\n        /* \"Usdt.sol\":10736:10776  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":10757:10763  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":10736:10776  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Usdt.sol\":10800:10801  0 */\n      0x00\n        /* \"Usdt.sol\":10783:10789  _owner */\n      dup1\n      0x00\n        /* \"Usdt.sol\":10783:10802  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Usdt.sol\":10678:10808  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"Usdt.sol\":12011:12090  function getOwner() external view returns (address) {\r... */\n    tag_56:\n        /* \"Usdt.sol\":12054:12061  address */\n      0x00\n        /* \"Usdt.sol\":12077:12084  owner() */\n      tag_127\n        /* \"Usdt.sol\":12077:12082  owner */\n      tag_58\n        /* \"Usdt.sol\":12077:12084  owner() */\n      jump\t// in\n    tag_127:\n        /* \"Usdt.sol\":12070:12084  return owner() */\n      swap1\n      pop\n        /* \"Usdt.sol\":12011:12090  function getOwner() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Usdt.sol\":10076:10149  function owner() public view returns (address) {\r... */\n    tag_58:\n        /* \"Usdt.sol\":10114:10121  address */\n      0x00\n        /* \"Usdt.sol\":10137:10143  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":10130:10143  return _owner */\n      swap1\n      pop\n        /* \"Usdt.sol\":10076:10149  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Usdt.sol\":12285:12368  function symbol() external view returns (string memory) {\r... */\n    tag_60:\n        /* \"Usdt.sol\":12326:12339  string memory */\n      0x60\n        /* \"Usdt.sol\":12355:12362  _symbol */\n      0x05\n        /* \"Usdt.sol\":12348:12362  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Usdt.sol\":12285:12368  function symbol() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"Usdt.sol\":15847:15967  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_67:\n        /* \"Usdt.sol\":15903:15907  bool */\n      0x00\n        /* \"Usdt.sol\":10280:10292  _msgSender() */\n      tag_134\n        /* \"Usdt.sol\":10280:10290  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"Usdt.sol\":10270:10292  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":10270:10276  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":10270:10292  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Usdt.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"Usdt.sol\":15916:15943  _mint(_msgSender(), amount) */\n      tag_137\n        /* \"Usdt.sol\":15922:15934  _msgSender() */\n      tag_138\n        /* \"Usdt.sol\":15922:15932  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":15922:15934  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"Usdt.sol\":15936:15942  amount */\n      dup4\n        /* \"Usdt.sol\":15916:15921  _mint */\n      tag_139\n        /* \"Usdt.sol\":15916:15943  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_137:\n        /* \"Usdt.sol\":15957:15961  true */\n      0x01\n        /* \"Usdt.sol\":15950:15961  return true */\n      swap1\n      pop\n        /* \"Usdt.sol\":15847:15967  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":15396:15647  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_70:\n        /* \"Usdt.sol\":15481:15485  bool */\n      0x00\n        /* \"Usdt.sol\":15494:15623  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_141\n        /* \"Usdt.sol\":15503:15515  _msgSender() */\n      tag_142\n        /* \"Usdt.sol\":15503:15513  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":15503:15515  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"Usdt.sol\":15517:15524  spender */\n      dup5\n        /* \"Usdt.sol\":15526:15622  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_143\n        /* \"Usdt.sol\":15565:15580  subtractedValue */\n      dup6\n        /* \"Usdt.sol\":15526:15622  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"Usdt.sol\":15526:15537  _allowances */\n      0x02\n        /* \"Usdt.sol\":15526:15551  _allowances[_msgSender()] */\n      0x00\n        /* \"Usdt.sol\":15538:15550  _msgSender() */\n      tag_144\n        /* \"Usdt.sol\":15538:15548  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":15538:15550  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"Usdt.sol\":15526:15551  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":15526:15560  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"Usdt.sol\":15552:15559  spender */\n      dup11\n        /* \"Usdt.sol\":15526:15560  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Usdt.sol\":15526:15564  _allowances[_msgSender()][spender].sub */\n      tag_109\n      swap1\n        /* \"Usdt.sol\":15526:15622  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"Usdt.sol\":15494:15502  _approve */\n      tag_100\n        /* \"Usdt.sol\":15494:15623  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_141:\n        /* \"Usdt.sol\":15637:15641  true */\n      0x01\n        /* \"Usdt.sol\":15630:15641  return true */\n      swap1\n      pop\n        /* \"Usdt.sol\":15396:15647  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":12997:13147  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_73:\n        /* \"Usdt.sol\":13068:13072  bool */\n      0x00\n        /* \"Usdt.sol\":13081:13123  _transfer(_msgSender(), recipient, amount) */\n      tag_146\n        /* \"Usdt.sol\":13091:13103  _msgSender() */\n      tag_147\n        /* \"Usdt.sol\":13091:13101  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":13091:13103  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"Usdt.sol\":13105:13114  recipient */\n      dup5\n        /* \"Usdt.sol\":13116:13122  amount */\n      dup5\n        /* \"Usdt.sol\":13081:13090  _transfer */\n      tag_104\n        /* \"Usdt.sol\":13081:13123  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_146:\n        /* \"Usdt.sol\":13137:13141  true */\n      0x01\n        /* \"Usdt.sol\":13130:13141  return true */\n      swap1\n      pop\n        /* \"Usdt.sol\":12997:13147  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":11650:11671  string public _symbol */\n    tag_75:\n      0x05\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"Usdt.sol\":11676:11695  string public _name */\n    tag_81:\n      0x06\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"Usdt.sol\":13201:13331  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_88:\n        /* \"Usdt.sol\":13275:13282  uint256 */\n      0x00\n        /* \"Usdt.sol\":13298:13309  _allowances */\n      0x02\n        /* \"Usdt.sol\":13298:13316  _allowances[owner] */\n      0x00\n        /* \"Usdt.sol\":13310:13315  owner */\n      dup5\n        /* \"Usdt.sol\":13298:13316  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":13298:13325  _allowances[owner][spender] */\n      0x00\n        /* \"Usdt.sol\":13317:13324  spender */\n      dup4\n        /* \"Usdt.sol\":13298:13325  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Usdt.sol\":13291:13325  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"Usdt.sol\":13201:13331  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":10953:11056  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_91:\n        /* \"Usdt.sol\":10280:10292  _msgSender() */\n      tag_156\n        /* \"Usdt.sol\":10280:10290  _msgSender */\n      tag_99\n        /* \"Usdt.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"Usdt.sol\":10270:10292  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":10270:10276  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":10270:10292  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Usdt.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"Usdt.sol\":11022:11050  _transferOwnership(newOwner) */\n      tag_159\n        /* \"Usdt.sol\":11041:11049  newOwner */\n      dup2\n        /* \"Usdt.sol\":11022:11040  _transferOwnership */\n      tag_160\n        /* \"Usdt.sol\":11022:11050  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_159:\n        /* \"Usdt.sol\":10953:11056  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":3773:3865  function _msgSender() internal view returns (address payable) {\r... */\n    tag_99:\n        /* \"Usdt.sol\":3818:3833  address payable */\n      0x00\n        /* \"Usdt.sol\":3849:3859  msg.sender */\n      caller\n        /* \"Usdt.sol\":3842:3859  return msg.sender */\n      swap1\n      pop\n        /* \"Usdt.sol\":3773:3865  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"Usdt.sol\":18672:18992  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_100:\n        /* \"Usdt.sol\":18779:18780  0 */\n      0x00\n        /* \"Usdt.sol\":18762:18781  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":18762:18767  owner */\n      dup4\n        /* \"Usdt.sol\":18762:18781  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Usdt.sol\":18754:18822  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"Usdt.sol\":18856:18857  0 */\n      0x00\n        /* \"Usdt.sol\":18837:18858  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":18837:18844  spender */\n      dup3\n        /* \"Usdt.sol\":18837:18858  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Usdt.sol\":18829:18897  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"Usdt.sol\":18936:18942  amount */\n      dup1\n        /* \"Usdt.sol\":18906:18917  _allowances */\n      0x02\n        /* \"Usdt.sol\":18906:18924  _allowances[owner] */\n      0x00\n        /* \"Usdt.sol\":18918:18923  owner */\n      dup6\n        /* \"Usdt.sol\":18906:18924  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":18906:18933  _allowances[owner][spender] */\n      0x00\n        /* \"Usdt.sol\":18925:18932  spender */\n      dup5\n        /* \"Usdt.sol\":18906:18933  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":18906:18942  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Usdt.sol\":18970:18977  spender */\n      dup2\n        /* \"Usdt.sol\":18954:18986  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":18963:18968  owner */\n      dup4\n        /* \"Usdt.sol\":18954:18986  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Usdt.sol\":18979:18985  amount */\n      dup4\n        /* \"Usdt.sol\":18954:18986  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Usdt.sol\":18672:18992  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":16622:17071  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_104:\n        /* \"Usdt.sol\":16734:16735  0 */\n      0x00\n        /* \"Usdt.sol\":16716:16736  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":16716:16722  sender */\n      dup4\n        /* \"Usdt.sol\":16716:16736  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Usdt.sol\":16708:16778  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"Usdt.sol\":16814:16815  0 */\n      0x00\n        /* \"Usdt.sol\":16793:16816  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":16793:16802  recipient */\n      dup3\n        /* \"Usdt.sol\":16793:16816  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Usdt.sol\":16785:16856  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"Usdt.sol\":16885:16956  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_168\n        /* \"Usdt.sol\":16907:16913  amount */\n      dup2\n        /* \"Usdt.sol\":16885:16956  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"Usdt.sol\":16885:16894  _balances */\n      0x01\n        /* \"Usdt.sol\":16885:16902  _balances[sender] */\n      0x00\n        /* \"Usdt.sol\":16895:16901  sender */\n      dup8\n        /* \"Usdt.sol\":16885:16902  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Usdt.sol\":16885:16906  _balances[sender].sub */\n      tag_109\n      swap1\n        /* \"Usdt.sol\":16885:16956  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"Usdt.sol\":16865:16874  _balances */\n      0x01\n        /* \"Usdt.sol\":16865:16882  _balances[sender] */\n      0x00\n        /* \"Usdt.sol\":16875:16881  sender */\n      dup6\n        /* \"Usdt.sol\":16865:16882  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":16865:16956  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Usdt.sol\":16986:17018  _balances[recipient].add(amount) */\n      tag_169\n        /* \"Usdt.sol\":17011:17017  amount */\n      dup2\n        /* \"Usdt.sol\":16986:16995  _balances */\n      0x01\n        /* \"Usdt.sol\":16986:17006  _balances[recipient] */\n      0x00\n        /* \"Usdt.sol\":16996:17005  recipient */\n      dup6\n        /* \"Usdt.sol\":16986:17006  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Usdt.sol\":16986:17010  _balances[recipient].add */\n      tag_116\n      swap1\n        /* \"Usdt.sol\":16986:17018  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"Usdt.sol\":16963:16972  _balances */\n      0x01\n        /* \"Usdt.sol\":16963:16983  _balances[recipient] */\n      0x00\n        /* \"Usdt.sol\":16973:16982  recipient */\n      dup5\n        /* \"Usdt.sol\":16963:16983  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":16963:17018  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Usdt.sol\":17047:17056  recipient */\n      dup2\n        /* \"Usdt.sol\":17030:17065  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":17039:17045  sender */\n      dup4\n        /* \"Usdt.sol\":17030:17065  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Usdt.sol\":17058:17064  amount */\n      dup4\n        /* \"Usdt.sol\":17030:17065  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Usdt.sol\":16622:17071  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":5732:5910  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_109:\n        /* \"Usdt.sol\":5818:5825  uint256 */\n      0x00\n        /* \"Usdt.sol\":5847:5848  a */\n      dup4\n        /* \"Usdt.sol\":5842:5843  b */\n      dup4\n        /* \"Usdt.sol\":5842:5848  b <= a */\n      gt\n      iszero\n        /* \"Usdt.sol\":5850:5862  errorMessage */\n      dup3\n        /* \"Usdt.sol\":5834:5863  require(b <= a, errorMessage) */\n      swap1\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_172:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_174\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_172)\n    tag_174:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Usdt.sol\":5834:5863  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_175\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_175:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n      pop\n        /* \"Usdt.sol\":5870:5879  uint256 c */\n      0x00\n        /* \"Usdt.sol\":5886:5887  b */\n      dup4\n        /* \"Usdt.sol\":5882:5883  a */\n      dup6\n        /* \"Usdt.sol\":5882:5887  a - b */\n      sub\n        /* \"Usdt.sol\":5870:5887  uint256 c = a - b */\n      swap1\n      pop\n        /* \"Usdt.sol\":5903:5904  c */\n      dup1\n        /* \"Usdt.sol\":5896:5904  return c */\n      swap2\n      pop\n      pop\n        /* \"Usdt.sol\":5732:5910  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":4905:5072  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_116:\n        /* \"Usdt.sol\":4963:4970  uint256 */\n      0x00\n        /* \"Usdt.sol\":4979:4988  uint256 c */\n      dup1\n        /* \"Usdt.sol\":4995:4996  b */\n      dup3\n        /* \"Usdt.sol\":4991:4992  a */\n      dup5\n        /* \"Usdt.sol\":4991:4996  a + b */\n      add\n        /* \"Usdt.sol\":4979:4996  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Usdt.sol\":5016:5017  a */\n      dup4\n        /* \"Usdt.sol\":5011:5012  c */\n      dup2\n        /* \"Usdt.sol\":5011:5017  c >= a */\n      lt\n      iszero\n        /* \"Usdt.sol\":5003:5049  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"Usdt.sol\":5065:5066  c */\n      dup1\n        /* \"Usdt.sol\":5058:5066  return c */\n      swap2\n      pop\n      pop\n        /* \"Usdt.sol\":4905:5072  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":17930:18260  function _burn(address account, uint256 amount) internal {\r... */\n    tag_120:\n        /* \"Usdt.sol\":18021:18022  0 */\n      0x00\n        /* \"Usdt.sol\":18002:18023  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":18002:18009  account */\n      dup3\n        /* \"Usdt.sol\":18002:18023  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Usdt.sol\":17994:18061  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"Usdt.sol\":18091:18159  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_180\n        /* \"Usdt.sol\":18114:18120  amount */\n      dup2\n        /* \"Usdt.sol\":18091:18159  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"Usdt.sol\":18091:18100  _balances */\n      0x01\n        /* \"Usdt.sol\":18091:18109  _balances[account] */\n      0x00\n        /* \"Usdt.sol\":18101:18108  account */\n      dup7\n        /* \"Usdt.sol\":18091:18109  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Usdt.sol\":18091:18113  _balances[account].sub */\n      tag_109\n      swap1\n        /* \"Usdt.sol\":18091:18159  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"Usdt.sol\":18070:18079  _balances */\n      0x01\n        /* \"Usdt.sol\":18070:18088  _balances[account] */\n      0x00\n        /* \"Usdt.sol\":18080:18087  account */\n      dup5\n        /* \"Usdt.sol\":18070:18088  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":18070:18159  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Usdt.sol\":18181:18205  _totalSupply.sub(amount) */\n      tag_181\n        /* \"Usdt.sol\":18198:18204  amount */\n      dup2\n        /* \"Usdt.sol\":18181:18193  _totalSupply */\n      sload(0x03)\n        /* \"Usdt.sol\":18181:18197  _totalSupply.sub */\n      tag_182\n      swap1\n        /* \"Usdt.sol\":18181:18205  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"Usdt.sol\":18166:18178  _totalSupply */\n      0x03\n        /* \"Usdt.sol\":18166:18205  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Usdt.sol\":18243:18244  0 */\n      0x00\n        /* \"Usdt.sol\":18217:18254  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":18226:18233  account */\n      dup3\n        /* \"Usdt.sol\":18217:18254  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Usdt.sol\":18247:18253  amount */\n      dup4\n        /* \"Usdt.sol\":18217:18254  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Usdt.sol\":17930:18260  function _burn(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":17332:17622  function _mint(address account, uint256 amount) internal {\r... */\n    tag_139:\n        /* \"Usdt.sol\":17423:17424  0 */\n      0x00\n        /* \"Usdt.sol\":17404:17425  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":17404:17411  account */\n      dup3\n        /* \"Usdt.sol\":17404:17425  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Usdt.sol\":17396:17461  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"Usdt.sol\":17485:17509  _totalSupply.add(amount) */\n      tag_185\n        /* \"Usdt.sol\":17502:17508  amount */\n      dup2\n        /* \"Usdt.sol\":17485:17497  _totalSupply */\n      sload(0x03)\n        /* \"Usdt.sol\":17485:17501  _totalSupply.add */\n      tag_116\n      swap1\n        /* \"Usdt.sol\":17485:17509  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"Usdt.sol\":17470:17482  _totalSupply */\n      0x03\n        /* \"Usdt.sol\":17470:17509  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Usdt.sol\":17537:17567  _balances[account].add(amount) */\n      tag_186\n        /* \"Usdt.sol\":17560:17566  amount */\n      dup2\n        /* \"Usdt.sol\":17537:17546  _balances */\n      0x01\n        /* \"Usdt.sol\":17537:17555  _balances[account] */\n      0x00\n        /* \"Usdt.sol\":17547:17554  account */\n      dup6\n        /* \"Usdt.sol\":17537:17555  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Usdt.sol\":17537:17559  _balances[account].add */\n      tag_116\n      swap1\n        /* \"Usdt.sol\":17537:17567  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"Usdt.sol\":17516:17525  _balances */\n      0x01\n        /* \"Usdt.sol\":17516:17534  _balances[account] */\n      0x00\n        /* \"Usdt.sol\":17526:17533  account */\n      dup5\n        /* \"Usdt.sol\":17516:17534  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Usdt.sol\":17516:17567  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Usdt.sol\":17600:17607  account */\n      dup2\n        /* \"Usdt.sol\":17579:17616  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":17596:17597  0 */\n      0x00\n        /* \"Usdt.sol\":17579:17616  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Usdt.sol\":17609:17615  amount */\n      dup4\n        /* \"Usdt.sol\":17579:17616  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Usdt.sol\":17332:17622  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":11154:11369  function _transferOwnership(address newOwner) internal {\r... */\n    tag_160:\n        /* \"Usdt.sol\":11244:11245  0 */\n      0x00\n        /* \"Usdt.sol\":11224:11246  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":11224:11232  newOwner */\n      dup2\n        /* \"Usdt.sol\":11224:11246  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Usdt.sol\":11216:11289  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"Usdt.sol\":11330:11338  newOwner */\n      dup1\n        /* \"Usdt.sol\":11301:11339  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":11322:11328  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Usdt.sol\":11301:11339  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Usdt.sol\":11355:11363  newOwner */\n      dup1\n        /* \"Usdt.sol\":11346:11352  _owner */\n      0x00\n      dup1\n        /* \"Usdt.sol\":11346:11363  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Usdt.sol\":11154:11369  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"Usdt.sol\":5327:5457  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_182:\n        /* \"Usdt.sol\":5385:5392  uint256 */\n      0x00\n        /* \"Usdt.sol\":5408:5451  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_190\n        /* \"Usdt.sol\":5412:5413  a */\n      dup4\n        /* \"Usdt.sol\":5415:5416  b */\n      dup4\n        /* \"Usdt.sol\":5408:5451  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"Usdt.sol\":5408:5411  sub */\n      tag_109\n        /* \"Usdt.sol\":5408:5451  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_190:\n        /* \"Usdt.sol\":5401:5451  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"Usdt.sol\":5327:5457  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855 42455032303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820afaf6345be38a2785d85b646c5d42876410638ea56f43d891cd80d599e1f57a364736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200024060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600a81526020017f5465746865722055534400000000000000000000000000000000000000000000815250600690805190602001906200010f92919062000248565b506040518060400160405280600481526020017f5553445400000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000248565b506012600460006101000a81548160ff021916908360ff1602179055506a18d0bf423c03d8de000000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f7565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028b57805160ff1916838001178555620002bc565b82800160010185558215620002bc579182015b82811115620002bb5782518255916020019190600101906200029e565b5b509050620002cb9190620002cf565b5090565b620002f491905b80821115620002f0576000816000905550600101620002d6565b5090565b90565b611e5380620003076000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb146105d7578063b09f12661461063d578063d28d8852146106c0578063dd62ed3e14610743578063f2fde38b146107bb5761012c565b8063893d20e8146104145780638da5cb5b1461045e57806395d89b41146104a8578063a0712d681461052b578063a457c2d7146105715761012c565b806332424aa3116100f457806332424aa3146102e2578063395093511461030657806342966c681461036c57806370a08231146103b2578063715018a61461040a5761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021a57806323b872dd14610238578063313ce567146102be575b600080fd5b6101396107ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108a1565b604051808215151515815260200191505060405180910390f35b6102226108bf565b6040518082815260200191505060405180910390f35b6102a46004803603606081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c9565b604051808215151515815260200191505060405180910390f35b6102c66109a2565b604051808260ff1660ff16815260200191505060405180910390f35b6102ea6109b9565b604051808260ff1660ff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109cc565b604051808215151515815260200191505060405180910390f35b6103986004803603602081101561038257600080fd5b8101908080359060200190929190505050610a7f565b604051808215151515815260200191505060405180910390f35b6103f4600480360360208110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a9b565b6040518082815260200191505060405180910390f35b610412610ae4565b005b61041c610c6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610466610c7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610ca4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105576004803603602081101561054157600080fd5b8101908080359060200190929190505050610d46565b604051808215151515815260200191505060405180910390f35b6105bd6004803603604081101561058757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e2b565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef8565b604051808215151515815260200191505060405180910390f35b610645610f16565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068557808201518184015260208101905061066a565b50505050905090810190601f1680156106b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106c8610fb4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107a56004803603604081101561075957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611052565b6040518082815260200191505060405180910390f35b6107fd600480360360208110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d9565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b60006108b56108ae6111ae565b84846111b6565b6001905092915050565b6000600354905090565b60006108d68484846113ad565b610997846108e26111ae565b61099285604051806060016040528060288152602001611d2460289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109486111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a756109d96111ae565b84610a7085600260006109ea6111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b6111b6565b6001905092915050565b6000610a92610a8c6111ae565b836117af565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610aec6111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c76610c7b565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050905090565b6000610d506111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e22610e1c6111ae565b83611969565b60019050919050565b6000610eee610e386111ae565b84610ee985604051806060016040528060258152602001611d956025913960026000610e626111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b6001905092915050565b6000610f0c610f056111ae565b84846113ad565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104a5780601f1061101f5761010080835404028352916020019161104a565b820191906000526020600020905b81548152906001019060200180831161102d57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110e16111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6111ab81611b26565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561123c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611cda6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611dfd6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611433576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611cb56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d726023913960400191505060405180910390fd5b61152581604051806060016040528060268152602001611d4c60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115ba81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611714576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116d95780820151818401526020810190506116be565b50505050905090810190601f1680156117065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611835576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611dba6021913960400191505060405180910390fd5b6118a181604051806060016040528060228152602001611ddb60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118f981600354611c6a90919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a218160035461172790919063ffffffff16565b600381905550611a7981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cfe6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611667565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820afaf6345be38a2785d85b646c5d42876410638ea56f43d891cd80d599e1f57a364736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x240 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5465746865722055534400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH11 0x18D0BF423C03D8DE000000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x28B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CB SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2F0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1E53 DUP1 PUSH3 0x307 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7BB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x645 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x685 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6ED JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x735 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B5 PUSH2 0x8AE PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D6 DUP5 DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x997 DUP5 PUSH2 0x8E2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x992 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D24 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x948 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0x9D9 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xA70 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EA PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 PUSH2 0xC7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE22 PUSH2 0xE1C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE PUSH2 0xE38 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xEE9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D95 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE62 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C PUSH2 0xF05 PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFAC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF81 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x104A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x101F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DFD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D72 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15BA DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1706 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DBA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DDB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18F9 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A79 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820AFAF6345BE38A2 PUSH25 0x5D85B646C5D42876410638EA56F43D891CD80D599E1F57A364 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "11376:8013:0:-;;;11702:249;8:9:-1;5:2;;;30:1;27;20:12;5:2;11702:249:0;9885:17;9905:12;:10;;;:12;;:::i;:::-;9885:32;;9933:9;9924:6;;:18;;;;;;;;;;;;;;;;;;9987:9;9954:43;;9983:1;9954:43;;;;;;;;;;;;9854:149;11730:20;;;;;;;;;;;;;;;;;:5;:20;;;;;;;;;;;;:::i;:::-;;11757:16;;;;;;;;;;;;;;;;;:7;:16;;;;;;;;;;;;:::i;:::-;;11792:2;11780:9;;:14;;;;;;;;;;;;;;;;;;11816:26;11801:12;:41;;;;11873:12;;11849:9;:21;11859:10;11849:21;;;;;;;;;;;;;;;:36;;;;11920:10;11899:46;;11916:1;11899:46;;;11932:12;;11899:46;;;;;;;;;;;;;;;;;;11376:8013;;3773:92;3818:15;3849:10;3842:17;;3773:92;:::o;11376:8013::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063893d20e8116100ad578063a9059cbb11610071578063a9059cbb146105d7578063b09f12661461063d578063d28d8852146106c0578063dd62ed3e14610743578063f2fde38b146107bb5761012c565b8063893d20e8146104145780638da5cb5b1461045e57806395d89b41146104a8578063a0712d681461052b578063a457c2d7146105715761012c565b806332424aa3116100f457806332424aa3146102e2578063395093511461030657806342966c681461036c57806370a08231146103b2578063715018a61461040a5761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021a57806323b872dd14610238578063313ce567146102be575b600080fd5b6101396107ff565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108a1565b604051808215151515815260200191505060405180910390f35b6102226108bf565b6040518082815260200191505060405180910390f35b6102a46004803603606081101561024e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c9565b604051808215151515815260200191505060405180910390f35b6102c66109a2565b604051808260ff1660ff16815260200191505060405180910390f35b6102ea6109b9565b604051808260ff1660ff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109cc565b604051808215151515815260200191505060405180910390f35b6103986004803603602081101561038257600080fd5b8101908080359060200190929190505050610a7f565b604051808215151515815260200191505060405180910390f35b6103f4600480360360208110156103c857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a9b565b6040518082815260200191505060405180910390f35b610412610ae4565b005b61041c610c6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610466610c7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104b0610ca4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104f05780820151818401526020810190506104d5565b50505050905090810190601f16801561051d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105576004803603602081101561054157600080fd5b8101908080359060200190929190505050610d46565b604051808215151515815260200191505060405180910390f35b6105bd6004803603604081101561058757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e2b565b604051808215151515815260200191505060405180910390f35b610623600480360360408110156105ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ef8565b604051808215151515815260200191505060405180910390f35b610645610f16565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561068557808201518184015260208101905061066a565b50505050905090810190601f1680156106b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106c8610fb4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107085780820151818401526020810190506106ed565b50505050905090810190601f1680156107355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6107a56004803603604081101561075957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611052565b6040518082815260200191505060405180910390f35b6107fd600480360360208110156107d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d9565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108975780601f1061086c57610100808354040283529160200191610897565b820191906000526020600020905b81548152906001019060200180831161087a57829003601f168201915b5050505050905090565b60006108b56108ae6111ae565b84846111b6565b6001905092915050565b6000600354905090565b60006108d68484846113ad565b610997846108e26111ae565b61099285604051806060016040528060288152602001611d2460289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109486111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff1681565b6000610a756109d96111ae565b84610a7085600260006109ea6111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b6111b6565b6001905092915050565b6000610a92610a8c6111ae565b836117af565b60019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610aec6111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c76610c7b565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050905090565b6000610d506111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e22610e1c6111ae565b83611969565b60019050919050565b6000610eee610e386111ae565b84610ee985604051806060016040528060258152602001611d956025913960026000610e626111ae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b6111b6565b6001905092915050565b6000610f0c610f056111ae565b84846113ad565b6001905092915050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fac5780601f10610f8157610100808354040283529160200191610fac565b820191906000526020600020905b815481529060010190602001808311610f8f57829003601f168201915b505050505081565b60068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104a5780601f1061101f5761010080835404028352916020019161104a565b820191906000526020600020905b81548152906001019060200180831161102d57829003601f168201915b505050505081565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6110e16111ae565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6111ab81611b26565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561123c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611cda6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611dfd6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611433576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611cb56025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d726023913960400191505060405180910390fd5b61152581604051806060016040528060268152602001611d4c60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115ba81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611714576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116d95780820151818401526020810190506116be565b50505050905090810190601f1680156117065780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156117a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611835576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611dba6021913960400191505060405180910390fd5b6118a181604051806060016040528060228152602001611ddb60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116679092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118f981600354611c6a90919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611a218160035461172790919063ffffffff16565b600381905550611a7981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461172790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cfe6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611cac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611667565b90509291505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e2066726f6d20746865207a65726f206164647265737342455032303a206275726e20616d6f756e7420657863656564732062616c616e636542455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820afaf6345be38a2785d85b646c5d42876410638ea56f43d891cd80d599e1f57a364736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5D7 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x743 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7BB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x571 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x32424AA3 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40A JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH2 0x9A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0x9B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41C PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4F0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x51D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x557 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x645 PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x685 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x66A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6B2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C8 PUSH2 0xFB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x708 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6ED JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x735 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1052 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10D9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x897 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x86C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x897 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x87A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B5 PUSH2 0x8AE PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D6 DUP5 DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH2 0x997 DUP5 PUSH2 0x8E2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x992 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D24 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x948 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA75 PUSH2 0x9D9 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xA70 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x9EA PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA92 PUSH2 0xA8C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC76 PUSH2 0xC7B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD3C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE22 PUSH2 0xE1C PUSH2 0x11AE JUMP JUMPDEST DUP4 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE PUSH2 0xE38 PUSH2 0x11AE JUMP JUMPDEST DUP5 PUSH2 0xEE9 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D95 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xE62 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C PUSH2 0xF05 PUSH2 0x11AE JUMP JUMPDEST DUP5 DUP5 PUSH2 0x13AD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xFAC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF81 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFAC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF8F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x104A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x101F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x104A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x102D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10E1 PUSH2 0x11AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11AB DUP2 PUSH2 0x1B26 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x123C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DFD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB5 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D72 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1525 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4C PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15BA DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1714 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16BE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1706 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DBA PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A1 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DDB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1667 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18F9 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1C6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A21 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1A79 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1727 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CFE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CAC DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1667 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737342455032303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65424550 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820AFAF6345BE38A2 PUSH25 0x5D85B646C5D42876410638EA56F43D891CD80D599E1F57A364 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "11376:8013:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11376:8013:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12421:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12421:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13461:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13461:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12556:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14050:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14050:292:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12149:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11623:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;14724:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14724:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16052:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16052:110:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12697:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12697:106:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10678:130;;;:::i;:::-;;12011:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10076:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12285:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12285:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15847:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15847:120:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15396:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15396:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12997:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12997:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11650:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11650:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11676:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11676:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13201:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13201:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10953:103;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10953:103:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;12421:79;12460:13;12489:5;12482:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12421:79;:::o;13461:144::-;13529:4;13542:39;13551:12;:10;:12::i;:::-;13565:7;13574:6;13542:8;:39::i;:::-;13595:4;13588:11;;13461:144;;;;:::o;12556:87::-;12602:7;12625:12;;12618:19;;12556:87;:::o;14050:292::-;14141:4;14154:36;14164:6;14172:9;14183:6;14154:9;:36::i;:::-;14197:121;14206:6;14214:12;:10;:12::i;:::-;14228:89;14266:6;14228:89;;;;;;;;;;;;;;;;;:11;:19;14240:6;14228:19;;;;;;;;;;;;;;;:33;14248:12;:10;:12::i;:::-;14228:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;14197:8;:121::i;:::-;14332:4;14325:11;;14050:292;;;;;:::o;12149:79::-;12192:5;12213:9;;;;;;;;;;;12206:16;;12149:79;:::o;11623:22::-;;;;;;;;;;;;;:::o;14724:200::-;14804:4;14817:83;14826:12;:10;:12::i;:::-;14840:7;14849:50;14888:10;14849:11;:25;14861:12;:10;:12::i;:::-;14849:25;;;;;;;;;;;;;;;:34;14875:7;14849:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;14817:8;:83::i;:::-;14914:4;14907:11;;14724:200;;;;:::o;16052:110::-;16098:4;16111:27;16117:12;:10;:12::i;:::-;16131:6;16111:5;:27::i;:::-;16152:4;16145:11;;16052:110;;;:::o;12697:106::-;12756:7;12779:9;:18;12789:7;12779:18;;;;;;;;;;;;;;;;12772:25;;12697:106;;;:::o;10678:130::-;10280:12;:10;:12::i;:::-;10270:22;;:6;;;;;;;;;;;:22;;;10262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10773:1;10736:40;;10757:6;;;;;;;;;;;10736:40;;;;;;;;;;;;10800:1;10783:6;;:19;;;;;;;;;;;;;;;;;;10678:130::o;12011:79::-;12054:7;12077;:5;:7::i;:::-;12070:14;;12011:79;:::o;10076:73::-;10114:7;10137:6;;;;;;;;;;;10130:13;;10076:73;:::o;12285:83::-;12326:13;12355:7;12348:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12285:83;:::o;15847:120::-;15903:4;10280:12;:10;:12::i;:::-;10270:22;;:6;;;;;;;;;;;:22;;;10262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15916:27;15922:12;:10;:12::i;:::-;15936:6;15916:5;:27::i;:::-;15957:4;15950:11;;15847:120;;;:::o;15396:251::-;15481:4;15494:129;15503:12;:10;:12::i;:::-;15517:7;15526:96;15565:15;15526:96;;;;;;;;;;;;;;;;;:11;:25;15538:12;:10;:12::i;:::-;15526:25;;;;;;;;;;;;;;;:34;15552:7;15526:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;15494:8;:129::i;:::-;15637:4;15630:11;;15396:251;;;;:::o;12997:150::-;13068:4;13081:42;13091:12;:10;:12::i;:::-;13105:9;13116:6;13081:9;:42::i;:::-;13137:4;13130:11;;12997:150;;;;:::o;11650:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11676:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;13201:130::-;13275:7;13298:11;:18;13310:5;13298:18;;;;;;;;;;;;;;;:27;13317:7;13298:27;;;;;;;;;;;;;;;;13291:34;;13201:130;;;;:::o;10953:103::-;10280:12;:10;:12::i;:::-;10270:22;;:6;;;;;;;;;;;:22;;;10262:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11022:28;11041:8;11022:18;:28::i;:::-;10953:103;:::o;3773:92::-;3818:15;3849:10;3842:17;;3773:92;:::o;18672:320::-;18779:1;18762:19;;:5;:19;;;;18754:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18856:1;18837:21;;:7;:21;;;;18829:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18936:6;18906:11;:18;18918:5;18906:18;;;;;;;;;;;;;;;:27;18925:7;18906:27;;;;;;;;;;;;;;;:36;;;;18970:7;18954:32;;18963:5;18954:32;;;18979:6;18954:32;;;;;;;;;;;;;;;;;;18672:320;;;:::o;16622:449::-;16734:1;16716:20;;:6;:20;;;;16708:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16814:1;16793:23;;:9;:23;;;;16785:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16885;16907:6;16885:71;;;;;;;;;;;;;;;;;:9;:17;16895:6;16885:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;16865:9;:17;16875:6;16865:17;;;;;;;;;;;;;;;:91;;;;16986:32;17011:6;16986:9;:20;16996:9;16986:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;16963:9;:20;16973:9;16963:20;;;;;;;;;;;;;;;:55;;;;17047:9;17030:35;;17039:6;17030:35;;;17058:6;17030:35;;;;;;;;;;;;;;;;;;16622:449;;;:::o;5732:178::-;5818:7;5847:1;5842;:6;;5850:12;5834:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5834:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5870:9;5886:1;5882;:5;5870:17;;5903:1;5896:8;;;5732:178;;;;;:::o;4905:167::-;4963:7;4979:9;4995:1;4991;:5;4979:17;;5016:1;5011;:6;;5003:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5065:1;5058:8;;;4905:167;;;;:::o;17930:330::-;18021:1;18002:21;;:7;:21;;;;17994:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18091:68;18114:6;18091:68;;;;;;;;;;;;;;;;;:9;:18;18101:7;18091:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;18070:9;:18;18080:7;18070:18;;;;;;;;;;;;;;;:89;;;;18181:24;18198:6;18181:12;;:16;;:24;;;;:::i;:::-;18166:12;:39;;;;18243:1;18217:37;;18226:7;18217:37;;;18247:6;18217:37;;;;;;;;;;;;;;;;;;17930:330;;:::o;17332:290::-;17423:1;17404:21;;:7;:21;;;;17396:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17485:24;17502:6;17485:12;;:16;;:24;;;;:::i;:::-;17470:12;:39;;;;17537:30;17560:6;17537:9;:18;17547:7;17537:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;17516:9;:18;17526:7;17516:18;;;;;;;;;;;;;;;:51;;;;17600:7;17579:37;;17596:1;17579:37;;;17609:6;17579:37;;;;;;;;;;;;;;;;;;17332:290;;:::o;11154:215::-;11244:1;11224:22;;:8;:22;;;;11216:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11330:8;11301:38;;11322:6;;;;;;;;;;;11301:38;;;;;;;;;;;;11355:8;11346:6;;:17;;;;;;;;;;;;;;;;;;11154:215;:::o;5327:130::-;5385:7;5408:43;5412:1;5415;5408:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;5401:50;;5327:130;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1552600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_decimals()": "1076",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"burn(uint256)": "infinite",
								"decimals()": "1173",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24408",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "MSTORE"
								},
								{
									"begin": 11702,
									"end": 11951,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 11702,
									"end": 11951,
									"name": "POP"
								},
								{
									"begin": 9885,
									"end": 9902,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 9905,
									"end": 9915,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9905,
									"end": 9915,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9905,
									"end": 9915,
									"name": "SHL"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "SHR"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "JUMPDEST"
								},
								{
									"begin": 9885,
									"end": 9917,
									"name": "SWAP1"
								},
								{
									"begin": 9885,
									"end": 9917,
									"name": "POP"
								},
								{
									"begin": 9933,
									"end": 9942,
									"name": "DUP1"
								},
								{
									"begin": 9924,
									"end": 9930,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9924,
									"end": 9930,
									"name": "DUP1"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "EXP"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "DUP2"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SLOAD"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "DUP2"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "MUL"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "NOT"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "AND"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SWAP1"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "DUP4"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "AND"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "MUL"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "OR"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SWAP1"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SSTORE"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "POP"
								},
								{
									"begin": 9987,
									"end": 9996,
									"name": "DUP1"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "AND"
								},
								{
									"begin": 9983,
									"end": 9984,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "AND"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "MLOAD"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "MLOAD"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "DUP1"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "SWAP2"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "SUB"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "SWAP1"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "LOG3"
								},
								{
									"begin": 9854,
									"end": 10003,
									"name": "POP"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "MLOAD"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "DUP1"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "ADD"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "MSTORE"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "DUP1"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "DUP2"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "MSTORE"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "ADD"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "PUSH",
									"value": "5465746865722055534400000000000000000000000000000000000000000000"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "DUP2"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "MSTORE"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "POP"
								},
								{
									"begin": 11730,
									"end": 11735,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "SWAP1"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "DUP1"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "MLOAD"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "SWAP1"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "ADD"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "SWAP1"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "SWAP3"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "SWAP2"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "SWAP1"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "JUMPDEST"
								},
								{
									"begin": 11730,
									"end": 11750,
									"name": "POP"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "MLOAD"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "DUP1"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "ADD"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "MSTORE"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "DUP1"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "DUP2"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "MSTORE"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "ADD"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "PUSH",
									"value": "5553445400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "DUP2"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "MSTORE"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "POP"
								},
								{
									"begin": 11757,
									"end": 11764,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "SWAP1"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "DUP1"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "MLOAD"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "SWAP1"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "ADD"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "SWAP1"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "SWAP3"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "SWAP2"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "SWAP1"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "JUMPDEST"
								},
								{
									"begin": 11757,
									"end": 11773,
									"name": "POP"
								},
								{
									"begin": 11792,
									"end": 11794,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11780,
									"end": 11789,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11780,
									"end": 11789,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "EXP"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "DUP2"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "SLOAD"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "DUP2"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "MUL"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "NOT"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "AND"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "SWAP1"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "DUP4"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "AND"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "MUL"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "OR"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "SWAP1"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "SSTORE"
								},
								{
									"begin": 11780,
									"end": 11794,
									"name": "POP"
								},
								{
									"begin": 11816,
									"end": 11842,
									"name": "PUSH",
									"value": "18D0BF423C03D8DE000000"
								},
								{
									"begin": 11801,
									"end": 11813,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11801,
									"end": 11842,
									"name": "DUP2"
								},
								{
									"begin": 11801,
									"end": 11842,
									"name": "SWAP1"
								},
								{
									"begin": 11801,
									"end": 11842,
									"name": "SSTORE"
								},
								{
									"begin": 11801,
									"end": 11842,
									"name": "POP"
								},
								{
									"begin": 11873,
									"end": 11885,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11873,
									"end": 11885,
									"name": "SLOAD"
								},
								{
									"begin": 11849,
									"end": 11858,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11859,
									"end": 11869,
									"name": "CALLER"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "AND"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "AND"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "DUP2"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "MSTORE"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "ADD"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "SWAP1"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "DUP2"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "MSTORE"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "ADD"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "KECCAK256"
								},
								{
									"begin": 11849,
									"end": 11885,
									"name": "DUP2"
								},
								{
									"begin": 11849,
									"end": 11885,
									"name": "SWAP1"
								},
								{
									"begin": 11849,
									"end": 11885,
									"name": "SSTORE"
								},
								{
									"begin": 11849,
									"end": 11885,
									"name": "POP"
								},
								{
									"begin": 11920,
									"end": 11930,
									"name": "CALLER"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "AND"
								},
								{
									"begin": 11916,
									"end": 11917,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "AND"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11932,
									"end": 11944,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11932,
									"end": 11944,
									"name": "SLOAD"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "MLOAD"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "DUP1"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "DUP3"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "DUP2"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "MSTORE"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "ADD"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "SWAP2"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "POP"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "POP"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "MLOAD"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "DUP1"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "SWAP2"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "SUB"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "SWAP1"
								},
								{
									"begin": 11899,
									"end": 11945,
									"name": "LOG3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMP"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "JUMPDEST"
								},
								{
									"begin": 3818,
									"end": 3833,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3859,
									"name": "CALLER"
								},
								{
									"begin": 3842,
									"end": 3859,
									"name": "SWAP1"
								},
								{
									"begin": 3842,
									"end": 3859,
									"name": "POP"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "SWAP1"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SLOAD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "AND"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ISZERO"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "MUL"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SUB"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "AND"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DIV"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "MSTORE"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "KECCAK256"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DIV"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "LT"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPI"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "MLOAD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "NOT"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "AND"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP4"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "OR"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP6"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SSTORE"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMP"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP6"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SSTORE"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ISZERO"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPI"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "GT"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ISZERO"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPI"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "MLOAD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SSTORE"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMP"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "POP"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "POP"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "POP"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "GT"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ISZERO"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPI"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP2"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SSTORE"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "POP"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMP"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "POP"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMP"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "CODECOPY"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 19389,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820afaf6345be38a2785d85b646c5d42876410638ea56f43d891cd80d599e1f57a364736f6c63430005100032",
									".code": [
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "MSTORE"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "POP"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "LT"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "SHR"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 19389,
											"name": "REVERT"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "JUMPDEST"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "JUMPDEST"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "MLOAD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "ADD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP3"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP2"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SUB"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP3"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "MSTORE"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP4"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP2"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP2"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "MLOAD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP2"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "MSTORE"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "ADD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP2"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "MLOAD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "ADD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP4"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP2"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "ADD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "AND"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "ISZERO"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "JUMPI"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP3"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SUB"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "MLOAD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP4"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SUB"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "EXP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SUB"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "NOT"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "AND"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP2"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "MSTORE"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "ADD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP2"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "JUMPDEST"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP3"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "MLOAD"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "DUP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP2"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SUB"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "RETURN"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "JUMPDEST"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "DUP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "DUP2"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "ADD"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "DUP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "DUP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "AND"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "ADD"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP3"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP2"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "DUP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "ADD"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP3"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP2"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "POP"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "POP"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "POP"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "JUMPDEST"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "MLOAD"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "DUP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "DUP3"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "ISZERO"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "ISZERO"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "ISZERO"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "ISZERO"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "DUP2"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "MSTORE"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "ADD"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP2"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "POP"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "POP"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "MLOAD"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "DUP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP2"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SUB"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP1"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "RETURN"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "JUMPDEST"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "JUMPDEST"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "MLOAD"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "DUP1"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "DUP3"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "DUP2"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "MSTORE"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "ADD"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "SWAP2"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "POP"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "POP"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "MLOAD"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "DUP1"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "SWAP2"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "SUB"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "SWAP1"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "RETURN"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "JUMPDEST"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP2"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "ADD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "AND"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "ADD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP3"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP2"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "AND"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "ADD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP3"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP2"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "ADD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP3"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP2"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "POP"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "POP"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "POP"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "JUMPDEST"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "MLOAD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP3"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "ISZERO"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "ISZERO"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "ISZERO"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "ISZERO"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP2"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "MSTORE"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "ADD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP2"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "POP"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "POP"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "MLOAD"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "DUP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP2"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SUB"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP1"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "RETURN"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "JUMPDEST"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "JUMPDEST"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "MLOAD"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "DUP1"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "DUP3"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "AND"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "AND"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "DUP2"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "MSTORE"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "ADD"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "SWAP2"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "POP"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "POP"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "MLOAD"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "DUP1"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "SWAP2"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "SUB"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "SWAP1"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "RETURN"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "JUMPDEST"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "JUMPDEST"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "MLOAD"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "DUP1"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "DUP3"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "AND"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "AND"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "DUP2"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "MSTORE"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "ADD"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "SWAP2"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "POP"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "POP"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "MLOAD"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "DUP1"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "SWAP2"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "SUB"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "SWAP1"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "RETURN"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "JUMPDEST"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "DUP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "DUP2"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "ADD"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "DUP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "DUP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "AND"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "ADD"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP3"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP2"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "DUP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "ADD"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP3"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP2"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "POP"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "POP"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "POP"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "JUMPDEST"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "MLOAD"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "DUP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "DUP3"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "ISZERO"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "ISZERO"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "ISZERO"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "ISZERO"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "DUP2"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "MSTORE"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "ADD"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP2"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "POP"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "POP"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "MLOAD"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "DUP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP2"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SUB"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP1"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "RETURN"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "JUMPDEST"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "DUP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "DUP2"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "ADD"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "DUP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "DUP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "ADD"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP3"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP2"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "POP"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "POP"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "POP"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "JUMPDEST"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "MLOAD"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "DUP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "DUP3"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "ISZERO"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "ISZERO"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "ISZERO"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "ISZERO"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "DUP2"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "MSTORE"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "ADD"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP2"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "POP"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "POP"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "MLOAD"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "DUP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP2"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SUB"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "RETURN"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "JUMPDEST"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "DUP2"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "ADD"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "AND"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "ADD"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP3"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP2"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "JUMPDEST"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "MLOAD"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "DUP3"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "DUP2"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "MSTORE"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "ADD"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP2"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "MLOAD"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "DUP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP2"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SUB"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "RETURN"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "JUMPDEST"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "JUMPDEST"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "STOP"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "JUMPDEST"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "JUMPDEST"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "MLOAD"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "DUP1"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "DUP3"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "AND"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "AND"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "DUP2"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "MSTORE"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "ADD"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "SWAP2"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "POP"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "POP"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "MLOAD"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "DUP1"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "SWAP2"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "SUB"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "SWAP1"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "RETURN"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "JUMPDEST"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "JUMPDEST"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "MLOAD"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "DUP1"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "DUP3"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "AND"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "AND"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "DUP2"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "MSTORE"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "ADD"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "SWAP2"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "POP"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "POP"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "MLOAD"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "DUP1"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "SWAP2"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "SUB"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "SWAP1"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "RETURN"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "JUMPDEST"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "JUMPDEST"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "MLOAD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP3"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SUB"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP3"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "MSTORE"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP4"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "MLOAD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "MSTORE"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP2"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "MLOAD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP4"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "AND"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "ISZERO"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "JUMPI"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP3"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SUB"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "MLOAD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP4"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SUB"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "EXP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SUB"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "NOT"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "AND"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP2"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "MSTORE"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "ADD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP2"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "JUMPDEST"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP3"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "MLOAD"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "DUP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP2"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SUB"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "RETURN"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "JUMPDEST"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "DUP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "DUP2"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "ADD"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "DUP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "DUP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "ADD"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP3"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP2"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "POP"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "POP"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "POP"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "JUMPDEST"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "MLOAD"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "DUP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "DUP3"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "ISZERO"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "ISZERO"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "ISZERO"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "ISZERO"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "DUP2"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "MSTORE"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "ADD"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP2"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "POP"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "POP"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "MLOAD"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "DUP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP2"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SUB"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "RETURN"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "JUMPDEST"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "DUP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "DUP2"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "ADD"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "DUP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "DUP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "AND"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "ADD"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP3"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP2"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "DUP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "ADD"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP3"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP2"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "POP"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "POP"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "POP"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "JUMPDEST"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "MLOAD"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "DUP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "DUP3"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "ISZERO"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "ISZERO"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "ISZERO"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "ISZERO"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "DUP2"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "MSTORE"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "ADD"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP2"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "POP"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "POP"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "MLOAD"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "DUP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP2"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SUB"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP1"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "RETURN"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "JUMPDEST"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "DUP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "DUP2"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "ADD"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "DUP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "DUP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "AND"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "ADD"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP3"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP2"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "DUP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "ADD"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP3"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP2"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "POP"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "POP"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "POP"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "JUMPDEST"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "MLOAD"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "DUP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "DUP3"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "ISZERO"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "ISZERO"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "ISZERO"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "ISZERO"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "DUP2"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "MSTORE"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "ADD"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP2"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "POP"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "POP"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "MLOAD"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "DUP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP2"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SUB"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP1"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "RETURN"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPDEST"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPDEST"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP3"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SUB"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP3"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MSTORE"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP4"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MSTORE"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP4"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "AND"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ISZERO"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPI"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP3"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SUB"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP4"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SUB"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "EXP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SUB"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "NOT"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "AND"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MSTORE"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPDEST"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP3"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SUB"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "RETURN"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPDEST"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPDEST"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP3"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SUB"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP3"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MSTORE"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP4"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MSTORE"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP4"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "AND"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ISZERO"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPI"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP3"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SUB"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP4"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SUB"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "EXP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SUB"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "NOT"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "AND"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MSTORE"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPDEST"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP3"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SUB"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "RETURN"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "JUMPDEST"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "DUP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "DUP2"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "ADD"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "DUP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "DUP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "AND"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "ADD"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP3"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP2"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "DUP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "AND"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "ADD"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP3"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP2"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "POP"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "POP"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "POP"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "JUMPDEST"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "MLOAD"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "DUP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "DUP3"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "DUP2"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "MSTORE"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "ADD"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP2"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "POP"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "POP"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "MLOAD"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "DUP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP2"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SUB"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP1"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "RETURN"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "JUMPDEST"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "DUP1"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "DUP2"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "ADD"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "SWAP1"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "DUP1"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "DUP1"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "AND"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "SWAP1"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "ADD"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "SWAP1"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "SWAP3"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "SWAP2"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "SWAP1"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "POP"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "POP"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "POP"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "JUMPDEST"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "STOP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "JUMPDEST"
										},
										{
											"begin": 12460,
											"end": 12473,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12489,
											"end": 12494,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SLOAD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "AND"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ISZERO"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MUL"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SUB"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "AND"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DIV"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DIV"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MUL"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MLOAD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MSTORE"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP3"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MSTORE"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP3"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SLOAD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "AND"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ISZERO"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MUL"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SUB"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "AND"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DIV"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ISZERO"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "JUMPI"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "LT"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "JUMPI"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP4"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SLOAD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DIV"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MUL"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP4"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MSTORE"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "JUMP"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "JUMPDEST"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP3"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MSTORE"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "KECCAK256"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "JUMPDEST"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SLOAD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "MSTORE"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP4"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "GT"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "JUMPI"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP3"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SUB"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "AND"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "DUP3"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "ADD"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP2"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "JUMPDEST"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "POP"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "SWAP1"
										},
										{
											"begin": 12482,
											"end": 12494,
											"name": "POP"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "SWAP1"
										},
										{
											"begin": 12421,
											"end": 12500,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "JUMPDEST"
										},
										{
											"begin": 13529,
											"end": 13533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13581,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 13551,
											"end": 13563,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 13551,
											"end": 13561,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13551,
											"end": 13563,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13551,
											"end": 13563,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 13551,
											"end": 13563,
											"name": "JUMPDEST"
										},
										{
											"begin": 13565,
											"end": 13572,
											"name": "DUP5"
										},
										{
											"begin": 13574,
											"end": 13580,
											"name": "DUP5"
										},
										{
											"begin": 13542,
											"end": 13550,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 13542,
											"end": 13581,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13542,
											"end": 13581,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 13542,
											"end": 13581,
											"name": "JUMPDEST"
										},
										{
											"begin": 13595,
											"end": 13599,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13588,
											"end": 13599,
											"name": "SWAP1"
										},
										{
											"begin": 13588,
											"end": 13599,
											"name": "POP"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP3"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "SWAP2"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "POP"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "POP"
										},
										{
											"begin": 13461,
											"end": 13605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "JUMPDEST"
										},
										{
											"begin": 12602,
											"end": 12609,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12625,
											"end": 12637,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12625,
											"end": 12637,
											"name": "SLOAD"
										},
										{
											"begin": 12618,
											"end": 12637,
											"name": "SWAP1"
										},
										{
											"begin": 12618,
											"end": 12637,
											"name": "POP"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "SWAP1"
										},
										{
											"begin": 12556,
											"end": 12643,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "JUMPDEST"
										},
										{
											"begin": 14141,
											"end": 14145,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14154,
											"end": 14190,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 14164,
											"end": 14170,
											"name": "DUP5"
										},
										{
											"begin": 14172,
											"end": 14181,
											"name": "DUP5"
										},
										{
											"begin": 14183,
											"end": 14189,
											"name": "DUP5"
										},
										{
											"begin": 14154,
											"end": 14163,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 14154,
											"end": 14190,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14154,
											"end": 14190,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 14154,
											"end": 14190,
											"name": "JUMPDEST"
										},
										{
											"begin": 14197,
											"end": 14318,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 14206,
											"end": 14212,
											"name": "DUP5"
										},
										{
											"begin": 14214,
											"end": 14226,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 14214,
											"end": 14224,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14214,
											"end": 14226,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14214,
											"end": 14226,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 14214,
											"end": 14226,
											"name": "JUMPDEST"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 14266,
											"end": 14272,
											"name": "DUP6"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "MLOAD"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "DUP1"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "ADD"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "MSTORE"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "DUP1"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "DUP2"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "MSTORE"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "ADD"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "SWAP2"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "CODECOPY"
										},
										{
											"begin": 14228,
											"end": 14239,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14240,
											"end": 14246,
											"name": "DUP12"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "AND"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "AND"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "DUP2"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "MSTORE"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "ADD"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "SWAP1"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "DUP2"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "MSTORE"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "ADD"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14228,
											"end": 14247,
											"name": "KECCAK256"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14248,
											"end": 14260,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 14248,
											"end": 14258,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14248,
											"end": 14260,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14248,
											"end": 14260,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 14248,
											"end": 14260,
											"name": "JUMPDEST"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "AND"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "AND"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "DUP2"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "MSTORE"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "ADD"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "SWAP1"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "DUP2"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "MSTORE"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "ADD"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "KECCAK256"
										},
										{
											"begin": 14228,
											"end": 14261,
											"name": "SLOAD"
										},
										{
											"begin": 14228,
											"end": 14265,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 14228,
											"end": 14265,
											"name": "SWAP1"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "SWAP3"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "SWAP2"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "SWAP1"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "AND"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 14228,
											"end": 14317,
											"name": "JUMPDEST"
										},
										{
											"begin": 14197,
											"end": 14205,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14197,
											"end": 14318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14197,
											"end": 14318,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 14197,
											"end": 14318,
											"name": "JUMPDEST"
										},
										{
											"begin": 14332,
											"end": 14336,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14325,
											"end": 14336,
											"name": "SWAP1"
										},
										{
											"begin": 14325,
											"end": 14336,
											"name": "POP"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP4"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "SWAP3"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "POP"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "POP"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "POP"
										},
										{
											"begin": 14050,
											"end": 14342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "JUMPDEST"
										},
										{
											"begin": 12192,
											"end": 12197,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "SWAP1"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "SLOAD"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "SWAP1"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "EXP"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "SWAP1"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "DIV"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12213,
											"end": 12222,
											"name": "AND"
										},
										{
											"begin": 12206,
											"end": 12222,
											"name": "SWAP1"
										},
										{
											"begin": 12206,
											"end": 12222,
											"name": "POP"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "SWAP1"
										},
										{
											"begin": 12149,
											"end": 12228,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "JUMPDEST"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "SWAP1"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "SLOAD"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "SWAP1"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "EXP"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "SWAP1"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "DIV"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "AND"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "DUP2"
										},
										{
											"begin": 11623,
											"end": 11645,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "JUMPDEST"
										},
										{
											"begin": 14804,
											"end": 14808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14817,
											"end": 14900,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 14826,
											"end": 14838,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 14826,
											"end": 14836,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14826,
											"end": 14838,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14826,
											"end": 14838,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 14826,
											"end": 14838,
											"name": "JUMPDEST"
										},
										{
											"begin": 14840,
											"end": 14847,
											"name": "DUP5"
										},
										{
											"begin": 14849,
											"end": 14899,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 14888,
											"end": 14898,
											"name": "DUP6"
										},
										{
											"begin": 14849,
											"end": 14860,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14861,
											"end": 14873,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 14861,
											"end": 14871,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 14861,
											"end": 14873,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14861,
											"end": 14873,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 14861,
											"end": 14873,
											"name": "JUMPDEST"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "AND"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "AND"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "DUP2"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "MSTORE"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "ADD"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "SWAP1"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "DUP2"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "MSTORE"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "ADD"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14849,
											"end": 14874,
											"name": "KECCAK256"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14875,
											"end": 14882,
											"name": "DUP10"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "AND"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "AND"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "DUP2"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "MSTORE"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "ADD"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "SWAP1"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "DUP2"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "MSTORE"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "ADD"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "KECCAK256"
										},
										{
											"begin": 14849,
											"end": 14883,
											"name": "SLOAD"
										},
										{
											"begin": 14849,
											"end": 14887,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 14849,
											"end": 14887,
											"name": "SWAP1"
										},
										{
											"begin": 14849,
											"end": 14899,
											"name": "SWAP2"
										},
										{
											"begin": 14849,
											"end": 14899,
											"name": "SWAP1"
										},
										{
											"begin": 14849,
											"end": 14899,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14849,
											"end": 14899,
											"name": "AND"
										},
										{
											"begin": 14849,
											"end": 14899,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14849,
											"end": 14899,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 14849,
											"end": 14899,
											"name": "JUMPDEST"
										},
										{
											"begin": 14817,
											"end": 14825,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 14817,
											"end": 14900,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14817,
											"end": 14900,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 14817,
											"end": 14900,
											"name": "JUMPDEST"
										},
										{
											"begin": 14914,
											"end": 14918,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14907,
											"end": 14918,
											"name": "SWAP1"
										},
										{
											"begin": 14907,
											"end": 14918,
											"name": "POP"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP3"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "SWAP2"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "POP"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "POP"
										},
										{
											"begin": 14724,
											"end": 14924,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "JUMPDEST"
										},
										{
											"begin": 16098,
											"end": 16102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16111,
											"end": 16138,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 16117,
											"end": 16129,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 16117,
											"end": 16127,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 16117,
											"end": 16129,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16117,
											"end": 16129,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 16117,
											"end": 16129,
											"name": "JUMPDEST"
										},
										{
											"begin": 16131,
											"end": 16137,
											"name": "DUP4"
										},
										{
											"begin": 16111,
											"end": 16116,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 16111,
											"end": 16138,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16111,
											"end": 16138,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 16111,
											"end": 16138,
											"name": "JUMPDEST"
										},
										{
											"begin": 16152,
											"end": 16156,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16145,
											"end": 16156,
											"name": "SWAP1"
										},
										{
											"begin": 16145,
											"end": 16156,
											"name": "POP"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP2"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "SWAP1"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "POP"
										},
										{
											"begin": 16052,
											"end": 16162,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "JUMPDEST"
										},
										{
											"begin": 12756,
											"end": 12763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12788,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12789,
											"end": 12796,
											"name": "DUP4"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "AND"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "AND"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "DUP2"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "MSTORE"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "ADD"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "SWAP1"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "DUP2"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "MSTORE"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "ADD"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "KECCAK256"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "SLOAD"
										},
										{
											"begin": 12772,
											"end": 12797,
											"name": "SWAP1"
										},
										{
											"begin": 12772,
											"end": 12797,
											"name": "POP"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP2"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "SWAP1"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "POP"
										},
										{
											"begin": 12697,
											"end": 12803,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "JUMPDEST"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "EXP"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DIV"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "POP"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "POP"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "POP"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 10773,
											"end": 10774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "AND"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "DUP1"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "SWAP1"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "SLOAD"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "SWAP1"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "EXP"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "SWAP1"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "DIV"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "AND"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "AND"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "MLOAD"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "MLOAD"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "DUP1"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "SWAP2"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "SUB"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "SWAP1"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "LOG3"
										},
										{
											"begin": 10800,
											"end": 10801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP1"
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "EXP"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "DUP2"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "SLOAD"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "DUP2"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "MUL"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "NOT"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "AND"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "SWAP1"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "DUP4"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "AND"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "MUL"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "OR"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "SWAP1"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "SSTORE"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "POP"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "JUMPDEST"
										},
										{
											"begin": 12054,
											"end": 12061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12077,
											"end": 12084,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 12077,
											"end": 12082,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 12077,
											"end": 12084,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12077,
											"end": 12084,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 12077,
											"end": 12084,
											"name": "JUMPDEST"
										},
										{
											"begin": 12070,
											"end": 12084,
											"name": "SWAP1"
										},
										{
											"begin": 12070,
											"end": 12084,
											"name": "POP"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "SWAP1"
										},
										{
											"begin": 12011,
											"end": 12090,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "JUMPDEST"
										},
										{
											"begin": 10114,
											"end": 10121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "DUP1"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "SLOAD"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "EXP"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "SWAP1"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "DIV"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "AND"
										},
										{
											"begin": 10130,
											"end": 10143,
											"name": "SWAP1"
										},
										{
											"begin": 10130,
											"end": 10143,
											"name": "POP"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "SWAP1"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "JUMPDEST"
										},
										{
											"begin": 12326,
											"end": 12339,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12355,
											"end": 12362,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SLOAD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "AND"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ISZERO"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MUL"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SUB"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "AND"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DIV"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DIV"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MUL"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MLOAD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MSTORE"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP3"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MSTORE"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP3"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SLOAD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "AND"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ISZERO"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MUL"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SUB"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "AND"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DIV"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ISZERO"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "JUMPI"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "LT"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "JUMPI"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP4"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SLOAD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DIV"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MUL"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP4"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MSTORE"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "JUMP"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "JUMPDEST"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP3"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MSTORE"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "KECCAK256"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "JUMPDEST"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SLOAD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "MSTORE"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP4"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "GT"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "JUMPI"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP3"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SUB"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "AND"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "DUP3"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "ADD"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP2"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "JUMPDEST"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "SWAP1"
										},
										{
											"begin": 12348,
											"end": 12362,
											"name": "POP"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "SWAP1"
										},
										{
											"begin": 12285,
											"end": 12368,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "JUMPDEST"
										},
										{
											"begin": 15903,
											"end": 15907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "EXP"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DIV"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "POP"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "POP"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "POP"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 15916,
											"end": 15943,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 15922,
											"end": 15934,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 15922,
											"end": 15932,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15922,
											"end": 15934,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15922,
											"end": 15934,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 15922,
											"end": 15934,
											"name": "JUMPDEST"
										},
										{
											"begin": 15936,
											"end": 15942,
											"name": "DUP4"
										},
										{
											"begin": 15916,
											"end": 15921,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 15916,
											"end": 15943,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15916,
											"end": 15943,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 15916,
											"end": 15943,
											"name": "JUMPDEST"
										},
										{
											"begin": 15957,
											"end": 15961,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15950,
											"end": 15961,
											"name": "SWAP1"
										},
										{
											"begin": 15950,
											"end": 15961,
											"name": "POP"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP2"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "SWAP1"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "POP"
										},
										{
											"begin": 15847,
											"end": 15967,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "JUMPDEST"
										},
										{
											"begin": 15481,
											"end": 15485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15494,
											"end": 15623,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 15503,
											"end": 15515,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 15503,
											"end": 15513,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15503,
											"end": 15515,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15503,
											"end": 15515,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 15503,
											"end": 15515,
											"name": "JUMPDEST"
										},
										{
											"begin": 15517,
											"end": 15524,
											"name": "DUP5"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 15565,
											"end": 15580,
											"name": "DUP6"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "MLOAD"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "DUP1"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "ADD"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "MSTORE"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "DUP1"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "DUP2"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "MSTORE"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "ADD"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "SWAP2"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "CODECOPY"
										},
										{
											"begin": 15526,
											"end": 15537,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15538,
											"end": 15550,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15538,
											"end": 15548,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 15538,
											"end": 15550,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15538,
											"end": 15550,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 15538,
											"end": 15550,
											"name": "JUMPDEST"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "AND"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "AND"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "DUP2"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "MSTORE"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "ADD"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "SWAP1"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "DUP2"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "MSTORE"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "ADD"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15526,
											"end": 15551,
											"name": "KECCAK256"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15552,
											"end": 15559,
											"name": "DUP11"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "AND"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "AND"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "DUP2"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "MSTORE"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "ADD"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "SWAP1"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "DUP2"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "MSTORE"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "ADD"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "KECCAK256"
										},
										{
											"begin": 15526,
											"end": 15560,
											"name": "SLOAD"
										},
										{
											"begin": 15526,
											"end": 15564,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 15526,
											"end": 15564,
											"name": "SWAP1"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "SWAP3"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "SWAP2"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "SWAP1"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "AND"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 15526,
											"end": 15622,
											"name": "JUMPDEST"
										},
										{
											"begin": 15494,
											"end": 15502,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 15494,
											"end": 15623,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15494,
											"end": 15623,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 15494,
											"end": 15623,
											"name": "JUMPDEST"
										},
										{
											"begin": 15637,
											"end": 15641,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15630,
											"end": 15641,
											"name": "SWAP1"
										},
										{
											"begin": 15630,
											"end": 15641,
											"name": "POP"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP3"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "SWAP2"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "POP"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "POP"
										},
										{
											"begin": 15396,
											"end": 15647,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "JUMPDEST"
										},
										{
											"begin": 13068,
											"end": 13072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13081,
											"end": 13123,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 13091,
											"end": 13101,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "JUMPDEST"
										},
										{
											"begin": 13105,
											"end": 13114,
											"name": "DUP5"
										},
										{
											"begin": 13116,
											"end": 13122,
											"name": "DUP5"
										},
										{
											"begin": 13081,
											"end": 13090,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 13081,
											"end": 13123,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13081,
											"end": 13123,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 13081,
											"end": 13123,
											"name": "JUMPDEST"
										},
										{
											"begin": 13137,
											"end": 13141,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13130,
											"end": 13141,
											"name": "SWAP1"
										},
										{
											"begin": 13130,
											"end": 13141,
											"name": "POP"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP3"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "SWAP2"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "POP"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "POP"
										},
										{
											"begin": 12997,
											"end": 13147,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPDEST"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "AND"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ISZERO"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MUL"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SUB"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "AND"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DIV"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DIV"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MUL"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MSTORE"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP3"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MSTORE"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP3"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "AND"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ISZERO"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MUL"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SUB"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "AND"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DIV"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ISZERO"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPI"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "LT"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPI"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP4"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DIV"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MUL"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP4"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MSTORE"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPDEST"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP3"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MSTORE"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "KECCAK256"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPDEST"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SLOAD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "MSTORE"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP4"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "GT"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPI"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP3"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP1"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SUB"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "AND"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP3"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "ADD"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "SWAP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMPDEST"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "POP"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "DUP2"
										},
										{
											"begin": 11650,
											"end": 11671,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPDEST"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "AND"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ISZERO"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MUL"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SUB"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "AND"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DIV"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DIV"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MUL"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MSTORE"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP3"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MSTORE"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP3"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "AND"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ISZERO"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MUL"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SUB"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "AND"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DIV"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ISZERO"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPI"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "LT"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPI"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP4"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DIV"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MUL"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP4"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MSTORE"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPDEST"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP3"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MSTORE"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "KECCAK256"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPDEST"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SLOAD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "MSTORE"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP4"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "GT"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPI"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP3"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP1"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SUB"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "AND"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP3"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "ADD"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "SWAP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMPDEST"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "POP"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "DUP2"
										},
										{
											"begin": 11676,
											"end": 11695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "JUMPDEST"
										},
										{
											"begin": 13275,
											"end": 13282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13309,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "DUP5"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "AND"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "AND"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "DUP2"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "MSTORE"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "ADD"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "SWAP1"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "DUP2"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "MSTORE"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "ADD"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "KECCAK256"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13317,
											"end": 13324,
											"name": "DUP4"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "AND"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "AND"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "DUP2"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "MSTORE"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "ADD"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "SWAP1"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "DUP2"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "MSTORE"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "ADD"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "KECCAK256"
										},
										{
											"begin": 13298,
											"end": 13325,
											"name": "SLOAD"
										},
										{
											"begin": 13291,
											"end": 13325,
											"name": "SWAP1"
										},
										{
											"begin": 13291,
											"end": 13325,
											"name": "POP"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP3"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "SWAP2"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "POP"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "POP"
										},
										{
											"begin": 13201,
											"end": 13331,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "JUMPDEST"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "EXP"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DIV"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "POP"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "POP"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "POP"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 11022,
											"end": 11050,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 11041,
											"end": 11049,
											"name": "DUP2"
										},
										{
											"begin": 11022,
											"end": 11040,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 11022,
											"end": 11050,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11022,
											"end": 11050,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 11022,
											"end": 11050,
											"name": "JUMPDEST"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "POP"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3773,
											"end": 3865,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 3773,
											"end": 3865,
											"name": "JUMPDEST"
										},
										{
											"begin": 3818,
											"end": 3833,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "CALLER"
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "SWAP1"
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "POP"
										},
										{
											"begin": 3773,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3773,
											"end": 3865,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18672,
											"end": 18992,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 18672,
											"end": 18992,
											"name": "JUMPDEST"
										},
										{
											"begin": 18779,
											"end": 18780,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18762,
											"end": 18781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18762,
											"end": 18781,
											"name": "AND"
										},
										{
											"begin": 18762,
											"end": 18767,
											"name": "DUP4"
										},
										{
											"begin": 18762,
											"end": 18781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18762,
											"end": 18781,
											"name": "AND"
										},
										{
											"begin": 18762,
											"end": 18781,
											"name": "EQ"
										},
										{
											"begin": 18762,
											"end": 18781,
											"name": "ISZERO"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "JUMPI"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "MLOAD"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "DUP2"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "MSTORE"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "ADD"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "DUP1"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "DUP1"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "ADD"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "DUP3"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "DUP2"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "SUB"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "DUP3"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "MSTORE"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "DUP2"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "MSTORE"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "ADD"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "DUP1"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "SWAP2"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "CODECOPY"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "ADD"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "SWAP2"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "POP"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "POP"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "MLOAD"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "DUP1"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "SWAP2"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "SUB"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "SWAP1"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "REVERT"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 18754,
											"end": 18822,
											"name": "JUMPDEST"
										},
										{
											"begin": 18856,
											"end": 18857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18837,
											"end": 18858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18837,
											"end": 18858,
											"name": "AND"
										},
										{
											"begin": 18837,
											"end": 18844,
											"name": "DUP3"
										},
										{
											"begin": 18837,
											"end": 18858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18837,
											"end": 18858,
											"name": "AND"
										},
										{
											"begin": 18837,
											"end": 18858,
											"name": "EQ"
										},
										{
											"begin": 18837,
											"end": 18858,
											"name": "ISZERO"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "JUMPI"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "MLOAD"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "DUP2"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "MSTORE"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "ADD"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "DUP1"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "DUP1"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "ADD"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "DUP3"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "DUP2"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "SUB"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "DUP3"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "MSTORE"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "DUP2"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "MSTORE"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "ADD"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "DUP1"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "SWAP2"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "CODECOPY"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "ADD"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "SWAP2"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "POP"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "POP"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "MLOAD"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "DUP1"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "SWAP2"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "SUB"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "SWAP1"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "REVERT"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 18829,
											"end": 18897,
											"name": "JUMPDEST"
										},
										{
											"begin": 18936,
											"end": 18942,
											"name": "DUP1"
										},
										{
											"begin": 18906,
											"end": 18917,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18918,
											"end": 18923,
											"name": "DUP6"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "AND"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "AND"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "DUP2"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "MSTORE"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "ADD"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "SWAP1"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "DUP2"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "MSTORE"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "ADD"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18906,
											"end": 18924,
											"name": "KECCAK256"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18925,
											"end": 18932,
											"name": "DUP5"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "AND"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "AND"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "DUP2"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "MSTORE"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "ADD"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "SWAP1"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "DUP2"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "MSTORE"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "ADD"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18906,
											"end": 18933,
											"name": "KECCAK256"
										},
										{
											"begin": 18906,
											"end": 18942,
											"name": "DUP2"
										},
										{
											"begin": 18906,
											"end": 18942,
											"name": "SWAP1"
										},
										{
											"begin": 18906,
											"end": 18942,
											"name": "SSTORE"
										},
										{
											"begin": 18906,
											"end": 18942,
											"name": "POP"
										},
										{
											"begin": 18970,
											"end": 18977,
											"name": "DUP2"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "AND"
										},
										{
											"begin": 18963,
											"end": 18968,
											"name": "DUP4"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "AND"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18979,
											"end": 18985,
											"name": "DUP4"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "MLOAD"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "DUP1"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "DUP3"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "DUP2"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "MSTORE"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "ADD"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "SWAP2"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "POP"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "POP"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "MLOAD"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "DUP1"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "SWAP2"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "SUB"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "SWAP1"
										},
										{
											"begin": 18954,
											"end": 18986,
											"name": "LOG3"
										},
										{
											"begin": 18672,
											"end": 18992,
											"name": "POP"
										},
										{
											"begin": 18672,
											"end": 18992,
											"name": "POP"
										},
										{
											"begin": 18672,
											"end": 18992,
											"name": "POP"
										},
										{
											"begin": 18672,
											"end": 18992,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16622,
											"end": 17071,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 16622,
											"end": 17071,
											"name": "JUMPDEST"
										},
										{
											"begin": 16734,
											"end": 16735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16716,
											"end": 16736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16736,
											"name": "AND"
										},
										{
											"begin": 16716,
											"end": 16722,
											"name": "DUP4"
										},
										{
											"begin": 16716,
											"end": 16736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16736,
											"name": "AND"
										},
										{
											"begin": 16716,
											"end": 16736,
											"name": "EQ"
										},
										{
											"begin": 16716,
											"end": 16736,
											"name": "ISZERO"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "JUMPI"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "MLOAD"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "DUP2"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "MSTORE"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "ADD"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "DUP1"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "DUP1"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "ADD"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "DUP3"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "DUP2"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "SUB"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "DUP3"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "MSTORE"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "DUP2"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "MSTORE"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "ADD"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "DUP1"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "SWAP2"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "CODECOPY"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "ADD"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "SWAP2"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "POP"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "POP"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "MLOAD"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "DUP1"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "SWAP2"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "SUB"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "SWAP1"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "REVERT"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 16708,
											"end": 16778,
											"name": "JUMPDEST"
										},
										{
											"begin": 16814,
											"end": 16815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16793,
											"end": 16816,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16816,
											"name": "AND"
										},
										{
											"begin": 16793,
											"end": 16802,
											"name": "DUP3"
										},
										{
											"begin": 16793,
											"end": 16816,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16793,
											"end": 16816,
											"name": "AND"
										},
										{
											"begin": 16793,
											"end": 16816,
											"name": "EQ"
										},
										{
											"begin": 16793,
											"end": 16816,
											"name": "ISZERO"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "JUMPI"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "MLOAD"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "DUP2"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "MSTORE"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "ADD"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "DUP1"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "DUP1"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "ADD"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "DUP3"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "DUP2"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "SUB"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "DUP3"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "MSTORE"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "DUP2"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "MSTORE"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "ADD"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "DUP1"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "SWAP2"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "CODECOPY"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "ADD"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "SWAP2"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "POP"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "POP"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "MLOAD"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "DUP1"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "SWAP2"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "SUB"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "SWAP1"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "REVERT"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 16785,
											"end": 16856,
											"name": "JUMPDEST"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 16907,
											"end": 16913,
											"name": "DUP2"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "MLOAD"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "DUP1"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "ADD"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "MSTORE"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "DUP1"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "DUP2"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "MSTORE"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "ADD"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "SWAP2"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "CODECOPY"
										},
										{
											"begin": 16885,
											"end": 16894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16895,
											"end": 16901,
											"name": "DUP8"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "AND"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "AND"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "DUP2"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "MSTORE"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "ADD"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "SWAP1"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "DUP2"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "MSTORE"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "ADD"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "KECCAK256"
										},
										{
											"begin": 16885,
											"end": 16902,
											"name": "SLOAD"
										},
										{
											"begin": 16885,
											"end": 16906,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 16885,
											"end": 16906,
											"name": "SWAP1"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "SWAP3"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "SWAP2"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "SWAP1"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "AND"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 16885,
											"end": 16956,
											"name": "JUMPDEST"
										},
										{
											"begin": 16865,
											"end": 16874,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16875,
											"end": 16881,
											"name": "DUP6"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "AND"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "AND"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "DUP2"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "MSTORE"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "ADD"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "SWAP1"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "DUP2"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "MSTORE"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "ADD"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16865,
											"end": 16882,
											"name": "KECCAK256"
										},
										{
											"begin": 16865,
											"end": 16956,
											"name": "DUP2"
										},
										{
											"begin": 16865,
											"end": 16956,
											"name": "SWAP1"
										},
										{
											"begin": 16865,
											"end": 16956,
											"name": "SSTORE"
										},
										{
											"begin": 16865,
											"end": 16956,
											"name": "POP"
										},
										{
											"begin": 16986,
											"end": 17018,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 17011,
											"end": 17017,
											"name": "DUP2"
										},
										{
											"begin": 16986,
											"end": 16995,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16996,
											"end": 17005,
											"name": "DUP6"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "AND"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "AND"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "DUP2"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "MSTORE"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "ADD"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "SWAP1"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "DUP2"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "MSTORE"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "ADD"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "KECCAK256"
										},
										{
											"begin": 16986,
											"end": 17006,
											"name": "SLOAD"
										},
										{
											"begin": 16986,
											"end": 17010,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 16986,
											"end": 17010,
											"name": "SWAP1"
										},
										{
											"begin": 16986,
											"end": 17018,
											"name": "SWAP2"
										},
										{
											"begin": 16986,
											"end": 17018,
											"name": "SWAP1"
										},
										{
											"begin": 16986,
											"end": 17018,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16986,
											"end": 17018,
											"name": "AND"
										},
										{
											"begin": 16986,
											"end": 17018,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16986,
											"end": 17018,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 16986,
											"end": 17018,
											"name": "JUMPDEST"
										},
										{
											"begin": 16963,
											"end": 16972,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16973,
											"end": 16982,
											"name": "DUP5"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "AND"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "AND"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "DUP2"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "MSTORE"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "ADD"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "SWAP1"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "DUP2"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "MSTORE"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "ADD"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16963,
											"end": 16983,
											"name": "KECCAK256"
										},
										{
											"begin": 16963,
											"end": 17018,
											"name": "DUP2"
										},
										{
											"begin": 16963,
											"end": 17018,
											"name": "SWAP1"
										},
										{
											"begin": 16963,
											"end": 17018,
											"name": "SSTORE"
										},
										{
											"begin": 16963,
											"end": 17018,
											"name": "POP"
										},
										{
											"begin": 17047,
											"end": 17056,
											"name": "DUP2"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "AND"
										},
										{
											"begin": 17039,
											"end": 17045,
											"name": "DUP4"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "AND"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17058,
											"end": 17064,
											"name": "DUP4"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "MLOAD"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "DUP1"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "DUP3"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "DUP2"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "MSTORE"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "ADD"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "SWAP2"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "POP"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "POP"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "MLOAD"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "DUP1"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "SWAP2"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "SUB"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "SWAP1"
										},
										{
											"begin": 17030,
											"end": 17065,
											"name": "LOG3"
										},
										{
											"begin": 16622,
											"end": 17071,
											"name": "POP"
										},
										{
											"begin": 16622,
											"end": 17071,
											"name": "POP"
										},
										{
											"begin": 16622,
											"end": 17071,
											"name": "POP"
										},
										{
											"begin": 16622,
											"end": 17071,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "JUMPDEST"
										},
										{
											"begin": 5818,
											"end": 5825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5848,
											"name": "DUP4"
										},
										{
											"begin": 5842,
											"end": 5843,
											"name": "DUP4"
										},
										{
											"begin": 5842,
											"end": 5848,
											"name": "GT"
										},
										{
											"begin": 5842,
											"end": 5848,
											"name": "ISZERO"
										},
										{
											"begin": 5850,
											"end": 5862,
											"name": "DUP3"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "JUMPI"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MSTORE"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP3"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP3"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MSTORE"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP4"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MSTORE"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP4"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "AND"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ISZERO"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "JUMPI"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP3"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP4"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "EXP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "NOT"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "AND"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MSTORE"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "JUMPDEST"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP3"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "REVERT"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "JUMPDEST"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5870,
											"end": 5879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5887,
											"name": "DUP4"
										},
										{
											"begin": 5882,
											"end": 5883,
											"name": "DUP6"
										},
										{
											"begin": 5882,
											"end": 5887,
											"name": "SUB"
										},
										{
											"begin": 5870,
											"end": 5887,
											"name": "SWAP1"
										},
										{
											"begin": 5870,
											"end": 5887,
											"name": "POP"
										},
										{
											"begin": 5903,
											"end": 5904,
											"name": "DUP1"
										},
										{
											"begin": 5896,
											"end": 5904,
											"name": "SWAP2"
										},
										{
											"begin": 5896,
											"end": 5904,
											"name": "POP"
										},
										{
											"begin": 5896,
											"end": 5904,
											"name": "POP"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "SWAP4"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "SWAP3"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "POP"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "POP"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "POP"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4905,
											"end": 5072,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4905,
											"end": 5072,
											"name": "JUMPDEST"
										},
										{
											"begin": 4963,
											"end": 4970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 4988,
											"name": "DUP1"
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "DUP3"
										},
										{
											"begin": 4991,
											"end": 4992,
											"name": "DUP5"
										},
										{
											"begin": 4991,
											"end": 4996,
											"name": "ADD"
										},
										{
											"begin": 4979,
											"end": 4996,
											"name": "SWAP1"
										},
										{
											"begin": 4979,
											"end": 4996,
											"name": "POP"
										},
										{
											"begin": 5016,
											"end": 5017,
											"name": "DUP4"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP2"
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "LT"
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "ISZERO"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "JUMPI"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MLOAD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP2"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MSTORE"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "ADD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "ADD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP3"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP2"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SUB"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP3"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MSTORE"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP2"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MSTORE"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "ADD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP2"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MSTORE"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "POP"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "ADD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SWAP2"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "POP"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "POP"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MLOAD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SWAP2"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SUB"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SWAP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "REVERT"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "JUMPDEST"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "DUP1"
										},
										{
											"begin": 5058,
											"end": 5066,
											"name": "SWAP2"
										},
										{
											"begin": 5058,
											"end": 5066,
											"name": "POP"
										},
										{
											"begin": 5058,
											"end": 5066,
											"name": "POP"
										},
										{
											"begin": 4905,
											"end": 5072,
											"name": "SWAP3"
										},
										{
											"begin": 4905,
											"end": 5072,
											"name": "SWAP2"
										},
										{
											"begin": 4905,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 4905,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 4905,
											"end": 5072,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17930,
											"end": 18260,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 17930,
											"end": 18260,
											"name": "JUMPDEST"
										},
										{
											"begin": 18021,
											"end": 18022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18002,
											"end": 18023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18002,
											"end": 18023,
											"name": "AND"
										},
										{
											"begin": 18002,
											"end": 18009,
											"name": "DUP3"
										},
										{
											"begin": 18002,
											"end": 18023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18002,
											"end": 18023,
											"name": "AND"
										},
										{
											"begin": 18002,
											"end": 18023,
											"name": "EQ"
										},
										{
											"begin": 18002,
											"end": 18023,
											"name": "ISZERO"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "JUMPI"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "MLOAD"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "DUP2"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "MSTORE"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "DUP1"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "DUP1"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "DUP3"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "DUP2"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "SUB"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "DUP3"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "MSTORE"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "DUP2"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "MSTORE"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "DUP1"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH data",
											"value": "B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "SWAP2"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "CODECOPY"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "SWAP2"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "POP"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "POP"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "MLOAD"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "DUP1"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "SWAP2"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "SUB"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "SWAP1"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "REVERT"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 17994,
											"end": 18061,
											"name": "JUMPDEST"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 18114,
											"end": 18120,
											"name": "DUP2"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "MLOAD"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "DUP1"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "ADD"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "MSTORE"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "DUP1"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "DUP2"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "MSTORE"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "ADD"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "PUSH data",
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "SWAP2"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "CODECOPY"
										},
										{
											"begin": 18091,
											"end": 18100,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18101,
											"end": 18108,
											"name": "DUP7"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "AND"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "AND"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "DUP2"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "MSTORE"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "ADD"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "SWAP1"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "DUP2"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "MSTORE"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "ADD"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "KECCAK256"
										},
										{
											"begin": 18091,
											"end": 18109,
											"name": "SLOAD"
										},
										{
											"begin": 18091,
											"end": 18113,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 18091,
											"end": 18113,
											"name": "SWAP1"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "SWAP3"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "SWAP2"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "SWAP1"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "AND"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 18091,
											"end": 18159,
											"name": "JUMPDEST"
										},
										{
											"begin": 18070,
											"end": 18079,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18080,
											"end": 18087,
											"name": "DUP5"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "AND"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "AND"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "DUP2"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "MSTORE"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "ADD"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "SWAP1"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "DUP2"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "MSTORE"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "ADD"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18070,
											"end": 18088,
											"name": "KECCAK256"
										},
										{
											"begin": 18070,
											"end": 18159,
											"name": "DUP2"
										},
										{
											"begin": 18070,
											"end": 18159,
											"name": "SWAP1"
										},
										{
											"begin": 18070,
											"end": 18159,
											"name": "SSTORE"
										},
										{
											"begin": 18070,
											"end": 18159,
											"name": "POP"
										},
										{
											"begin": 18181,
											"end": 18205,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 18198,
											"end": 18204,
											"name": "DUP2"
										},
										{
											"begin": 18181,
											"end": 18193,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 18181,
											"end": 18193,
											"name": "SLOAD"
										},
										{
											"begin": 18181,
											"end": 18197,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 18181,
											"end": 18197,
											"name": "SWAP1"
										},
										{
											"begin": 18181,
											"end": 18205,
											"name": "SWAP2"
										},
										{
											"begin": 18181,
											"end": 18205,
											"name": "SWAP1"
										},
										{
											"begin": 18181,
											"end": 18205,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18181,
											"end": 18205,
											"name": "AND"
										},
										{
											"begin": 18181,
											"end": 18205,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18181,
											"end": 18205,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 18181,
											"end": 18205,
											"name": "JUMPDEST"
										},
										{
											"begin": 18166,
											"end": 18178,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 18166,
											"end": 18205,
											"name": "DUP2"
										},
										{
											"begin": 18166,
											"end": 18205,
											"name": "SWAP1"
										},
										{
											"begin": 18166,
											"end": 18205,
											"name": "SSTORE"
										},
										{
											"begin": 18166,
											"end": 18205,
											"name": "POP"
										},
										{
											"begin": 18243,
											"end": 18244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "AND"
										},
										{
											"begin": 18226,
											"end": 18233,
											"name": "DUP3"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "AND"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18247,
											"end": 18253,
											"name": "DUP4"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "MLOAD"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "DUP1"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "DUP3"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "DUP2"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "MSTORE"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "ADD"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "SWAP2"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "POP"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "POP"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "MLOAD"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "DUP1"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "SWAP2"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "SUB"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "SWAP1"
										},
										{
											"begin": 18217,
											"end": 18254,
											"name": "LOG3"
										},
										{
											"begin": 17930,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 17930,
											"end": 18260,
											"name": "POP"
										},
										{
											"begin": 17930,
											"end": 18260,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17332,
											"end": 17622,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 17332,
											"end": 17622,
											"name": "JUMPDEST"
										},
										{
											"begin": 17423,
											"end": 17424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17404,
											"end": 17425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17404,
											"end": 17425,
											"name": "AND"
										},
										{
											"begin": 17404,
											"end": 17411,
											"name": "DUP3"
										},
										{
											"begin": 17404,
											"end": 17425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17404,
											"end": 17425,
											"name": "AND"
										},
										{
											"begin": 17404,
											"end": 17425,
											"name": "EQ"
										},
										{
											"begin": 17404,
											"end": 17425,
											"name": "ISZERO"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "JUMPI"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "MLOAD"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP2"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "MSTORE"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "ADD"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP1"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP1"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "ADD"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP3"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP2"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "SUB"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP3"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "MSTORE"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP2"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "MSTORE"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "ADD"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP1"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP2"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "MSTORE"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "POP"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "ADD"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "SWAP2"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "POP"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "POP"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "MLOAD"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "DUP1"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "SWAP2"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "SUB"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "SWAP1"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "REVERT"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 17396,
											"end": 17461,
											"name": "JUMPDEST"
										},
										{
											"begin": 17485,
											"end": 17509,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 17502,
											"end": 17508,
											"name": "DUP2"
										},
										{
											"begin": 17485,
											"end": 17497,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17485,
											"end": 17497,
											"name": "SLOAD"
										},
										{
											"begin": 17485,
											"end": 17501,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 17485,
											"end": 17501,
											"name": "SWAP1"
										},
										{
											"begin": 17485,
											"end": 17509,
											"name": "SWAP2"
										},
										{
											"begin": 17485,
											"end": 17509,
											"name": "SWAP1"
										},
										{
											"begin": 17485,
											"end": 17509,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17485,
											"end": 17509,
											"name": "AND"
										},
										{
											"begin": 17485,
											"end": 17509,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17485,
											"end": 17509,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 17485,
											"end": 17509,
											"name": "JUMPDEST"
										},
										{
											"begin": 17470,
											"end": 17482,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17470,
											"end": 17509,
											"name": "DUP2"
										},
										{
											"begin": 17470,
											"end": 17509,
											"name": "SWAP1"
										},
										{
											"begin": 17470,
											"end": 17509,
											"name": "SSTORE"
										},
										{
											"begin": 17470,
											"end": 17509,
											"name": "POP"
										},
										{
											"begin": 17537,
											"end": 17567,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 17560,
											"end": 17566,
											"name": "DUP2"
										},
										{
											"begin": 17537,
											"end": 17546,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17547,
											"end": 17554,
											"name": "DUP6"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "AND"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "AND"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "DUP2"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "MSTORE"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "ADD"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "SWAP1"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "DUP2"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "MSTORE"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "ADD"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "KECCAK256"
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "SLOAD"
										},
										{
											"begin": 17537,
											"end": 17559,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 17537,
											"end": 17559,
											"name": "SWAP1"
										},
										{
											"begin": 17537,
											"end": 17567,
											"name": "SWAP2"
										},
										{
											"begin": 17537,
											"end": 17567,
											"name": "SWAP1"
										},
										{
											"begin": 17537,
											"end": 17567,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 17537,
											"end": 17567,
											"name": "AND"
										},
										{
											"begin": 17537,
											"end": 17567,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17537,
											"end": 17567,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 17537,
											"end": 17567,
											"name": "JUMPDEST"
										},
										{
											"begin": 17516,
											"end": 17525,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17526,
											"end": 17533,
											"name": "DUP5"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "AND"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "AND"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "DUP2"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "MSTORE"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "ADD"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "SWAP1"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "DUP2"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "MSTORE"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "ADD"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17516,
											"end": 17534,
											"name": "KECCAK256"
										},
										{
											"begin": 17516,
											"end": 17567,
											"name": "DUP2"
										},
										{
											"begin": 17516,
											"end": 17567,
											"name": "SWAP1"
										},
										{
											"begin": 17516,
											"end": 17567,
											"name": "SSTORE"
										},
										{
											"begin": 17516,
											"end": 17567,
											"name": "POP"
										},
										{
											"begin": 17600,
											"end": 17607,
											"name": "DUP2"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "AND"
										},
										{
											"begin": 17596,
											"end": 17597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "AND"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17609,
											"end": 17615,
											"name": "DUP4"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "MLOAD"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "DUP1"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "DUP3"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "DUP2"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "MSTORE"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "ADD"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "SWAP2"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "POP"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "POP"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "MLOAD"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "DUP1"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "SWAP2"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "SUB"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "SWAP1"
										},
										{
											"begin": 17579,
											"end": 17616,
											"name": "LOG3"
										},
										{
											"begin": 17332,
											"end": 17622,
											"name": "POP"
										},
										{
											"begin": 17332,
											"end": 17622,
											"name": "POP"
										},
										{
											"begin": 17332,
											"end": 17622,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11154,
											"end": 11369,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 11154,
											"end": 11369,
											"name": "JUMPDEST"
										},
										{
											"begin": 11244,
											"end": 11245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11224,
											"end": 11246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11224,
											"end": 11246,
											"name": "AND"
										},
										{
											"begin": 11224,
											"end": 11232,
											"name": "DUP2"
										},
										{
											"begin": 11224,
											"end": 11246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11224,
											"end": 11246,
											"name": "AND"
										},
										{
											"begin": 11224,
											"end": 11246,
											"name": "EQ"
										},
										{
											"begin": 11224,
											"end": 11246,
											"name": "ISZERO"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "JUMPI"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MLOAD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MSTORE"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "ADD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "ADD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP3"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SUB"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP3"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MSTORE"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MSTORE"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "ADD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SWAP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "CODECOPY"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "ADD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SWAP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "POP"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "POP"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MLOAD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SWAP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SUB"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SWAP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "REVERT"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "JUMPDEST"
										},
										{
											"begin": 11330,
											"end": 11338,
											"name": "DUP1"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "AND"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "DUP1"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "SWAP1"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "SLOAD"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "SWAP1"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "EXP"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "SWAP1"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "DIV"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "AND"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "AND"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "MLOAD"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "MLOAD"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "DUP1"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "SWAP2"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "SUB"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "SWAP1"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "LOG3"
										},
										{
											"begin": 11355,
											"end": 11363,
											"name": "DUP1"
										},
										{
											"begin": 11346,
											"end": 11352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11346,
											"end": 11352,
											"name": "DUP1"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "EXP"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "DUP2"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SLOAD"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "DUP2"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "MUL"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "NOT"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "AND"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SWAP1"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "DUP4"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "AND"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "MUL"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "OR"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SWAP1"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SSTORE"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "POP"
										},
										{
											"begin": 11154,
											"end": 11369,
											"name": "POP"
										},
										{
											"begin": 11154,
											"end": 11369,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5327,
											"end": 5457,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5327,
											"end": 5457,
											"name": "JUMPDEST"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "DUP4"
										},
										{
											"begin": 5415,
											"end": 5416,
											"name": "DUP4"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "MLOAD"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "DUP1"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "ADD"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "DUP1"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "DUP2"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "ADD"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "DUP2"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "POP"
										},
										{
											"begin": 5408,
											"end": 5411,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "JUMPDEST"
										},
										{
											"begin": 5401,
											"end": 5451,
											"name": "SWAP1"
										},
										{
											"begin": 5401,
											"end": 5451,
											"name": "POP"
										},
										{
											"begin": 5327,
											"end": 5457,
											"name": "SWAP3"
										},
										{
											"begin": 5327,
											"end": 5457,
											"name": "SWAP2"
										},
										{
											"begin": 5327,
											"end": 5457,
											"name": "POP"
										},
										{
											"begin": 5327,
											"end": 5457,
											"name": "POP"
										},
										{
											"begin": 5327,
											"end": 5457,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"B81EDBF10508D9B81724F18FF8F3D8BFBA9790734CE1F1C54DFE1030B4914855": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Usdt.sol\":\"BEP20USDT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Usdt.sol\":{\"keccak256\":\"0x9a2d702ba9230013b45b7839ba273b80b17da8a3007bdd624cc38e4bde218b88\",\"urls\":[\"bzz-raw://28e62bd28d7a833983abb510bee28e53134e8ad66d3a4a3e16a88c4e1a9d8618\",\"dweb:/ipfs/QmT4RewhjaT5o5kRG7qc2M7VKVshMFJ59atXNkDMgqHkC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "Usdt.sol:BEP20USDT",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "Usdt.sol:BEP20USDT",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "Usdt.sol:BEP20USDT",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "Usdt.sol:BEP20USDT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "Usdt.sol:BEP20USDT",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "Usdt.sol:BEP20USDT",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "Usdt.sol:BEP20USDT",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Usdt.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Usdt.sol\":{\"keccak256\":\"0x9a2d702ba9230013b45b7839ba273b80b17da8a3007bdd624cc38e4bde218b88\",\"urls\":[\"bzz-raw://28e62bd28d7a833983abb510bee28e53134e8ad66d3a4a3e16a88c4e1a9d8618\",\"dweb:/ipfs/QmT4RewhjaT5o5kRG7qc2M7VKVshMFJ59atXNkDMgqHkC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Usdt.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Usdt.sol\":{\"keccak256\":\"0x9a2d702ba9230013b45b7839ba273b80b17da8a3007bdd624cc38e4bde218b88\",\"urls\":[\"bzz-raw://28e62bd28d7a833983abb510bee28e53134e8ad66d3a4a3e16a88c4e1a9d8618\",\"dweb:/ipfs/QmT4RewhjaT5o5kRG7qc2M7VKVshMFJ59atXNkDMgqHkC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Usdt.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Usdt.sol\":{\"keccak256\":\"0x9a2d702ba9230013b45b7839ba273b80b17da8a3007bdd624cc38e4bde218b88\",\"urls\":[\"bzz-raw://28e62bd28d7a833983abb510bee28e53134e8ad66d3a4a3e16a88c4e1a9d8618\",\"dweb:/ipfs/QmT4RewhjaT5o5kRG7qc2M7VKVshMFJ59atXNkDMgqHkC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "Usdt.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Usdt.sol\":4670:9098  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"Usdt.sol\":4670:9098  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582020b30db7e33982288dfde3dca798426d6a407eb5f6a9aab8acea7d7b8d5b9ecf64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582020b30db7e33982288dfde3dca798426d6a407eb5f6a9aab8acea7d7b8d5b9ecf64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 KECCAK256 0xB3 0xD 0xB7 0xE3 CODECOPY DUP3 0x28 DUP14 REVERT 0xE3 0xDC 0xA7 SWAP9 TIMESTAMP PUSH14 0x6A407EB5F6A9AAB8ACEA7D7B8D5B SWAP15 0xCF PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4670:4428:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582020b30db7e33982288dfde3dca798426d6a407eb5f6a9aab8acea7d7b8d5b9ecf64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 KECCAK256 0xB3 0xD 0xB7 0xE3 CODECOPY DUP3 0x28 DUP14 REVERT 0xE3 0xDC 0xA7 SWAP9 TIMESTAMP PUSH14 0x6A407EB5F6A9AAB8ACEA7D7B8D5B SWAP15 0xCF PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4670:4428:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4670,
									"end": 9098,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4670,
									"end": 9098,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582020b30db7e33982288dfde3dca798426d6a407eb5f6a9aab8acea7d7b8d5b9ecf64736f6c63430005100032",
									".code": [
										{
											"begin": 4670,
											"end": 9098,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "ADDRESS"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "EQ"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "MSTORE"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "DUP1"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Usdt.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Usdt.sol\":{\"keccak256\":\"0x9a2d702ba9230013b45b7839ba273b80b17da8a3007bdd624cc38e4bde218b88\",\"urls\":[\"bzz-raw://28e62bd28d7a833983abb510bee28e53134e8ad66d3a4a3e16a88c4e1a9d8618\",\"dweb:/ipfs/QmT4RewhjaT5o5kRG7qc2M7VKVshMFJ59atXNkDMgqHkC7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Usdt.sol": {
				"ast": {
					"absolutePath": "Usdt.sol",
					"exportedSymbols": {
						"BEP20USDT": [
							915
						],
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 916,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "70:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "232:9:0"
									},
									"scope": 88,
									"src": "187:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "344:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "343:7:0"
									},
									"scope": 88,
									"src": "301:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "449:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "448:15:0"
									},
									"scope": 88,
									"src": "408:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "556:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "555:15:0"
									},
									"scope": 88,
									"src": "517:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "673:9:0"
									},
									"scope": 88,
									"src": "631:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "782:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "781:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "821:9:0"
									},
									"scope": 88,
									"src": "763:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1062:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1081:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1061:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1115:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1114:6:0"
									},
									"scope": 88,
									"src": "1044:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1408:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1424:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1407:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1464:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1463:9:0"
									},
									"scope": 88,
									"src": "1389:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2129:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2146:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2128:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2180:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2179:6:0"
									},
									"scope": 88,
									"src": "2112:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2506:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2505:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2575:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2574:6:0"
									},
									"scope": 88,
									"src": "2484:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2759:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2781:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2801:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2758:57:0"
									},
									"src": "2744:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2986:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3009:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3034:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2985:63:0"
									},
									"src": "2971:78:0"
								}
							],
							"scope": 916,
							"src": "97:2955:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3764:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3764:0:0"
									},
									"scope": 113,
									"src": "3740:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3835:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "3849:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3849:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3842:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3792:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3818:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3817:17:0"
									},
									"scope": 113,
									"src": "3773:92:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3928:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 946,
													"src": "3935:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3935:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "4072:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4072:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "4065:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3914:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3914:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3913:14:0"
									},
									"scope": 113,
									"src": "3871:215:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 916,
							"src": "3566:523:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4972:100:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4979:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4991:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4995:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4991:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4979:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "5011:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5016:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5011:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5019:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "5003:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5003:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "5003:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "5065:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "5058:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4918:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4929:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4917:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4963:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4962:9:0"
									},
									"scope": 298,
									"src": "4905:167:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5394:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5412:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5415:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5418:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5408:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5401:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5340:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5351:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5339:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5384:9:0"
									},
									"scope": 298,
									"src": "5327:130:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5827:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5842:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5847:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5842:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5850:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "5834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5834:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5834:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5870:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5882:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5886:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5870:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5903:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5896:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5745:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5756:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5767:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5744:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5817:9:0"
									},
									"scope": 298,
									"src": "5732:178:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6208:364:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6428:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6433:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6428:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6424:37:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6436:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6452:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6445:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6469:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6481:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6485:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6481:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6469:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6501:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6505:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6501:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6510:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6501:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6513:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "6493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6493:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6493:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6565:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6558:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6154:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6165:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6153:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6198:9:0"
									},
									"scope": 298,
									"src": "6141:431:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "7083:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "7101:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7104:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7107:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "7097:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7097:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "7090:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7040:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7028:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7074:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7073:9:0"
									},
									"scope": 298,
									"src": "7016:126:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7701:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7783:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7786:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "7771:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7771:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7771:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7806:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7818:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7822:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7806:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7922:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7915:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7619:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7630:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7641:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7641:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7618:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7692:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7691:9:0"
									},
									"scope": 298,
									"src": "7606:323:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8429:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8447:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8450:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8453:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8443:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8436:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8375:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8386:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8374:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8419:9:0"
									},
									"scope": 298,
									"src": "8362:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "9034:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "9049:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9054:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9049:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "9057:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "9041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9041:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "9041:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "9084:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "9088:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9084:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "9077:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8952:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8963:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8974:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8951:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "9025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9024:9:0"
									},
									"scope": 298,
									"src": "8939:156:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 916,
							"src": "4670:4428:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9629:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9629:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9642:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9642:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9698:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9729:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9697:57:0"
									},
									"src": "9671:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9878:125:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9885:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9885:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9905:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9905:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9885:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9924:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9933:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9924:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9924:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9983:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9975:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9975:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9987:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9954:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9949:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9866:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9878:0:0"
									},
									"scope": 404,
									"src": "9854:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "10123:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "10137:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "10130:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10090:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10114:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10113:9:0"
									},
									"scope": 404,
									"src": "10076:73:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "10255:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "10270:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "10280:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10280:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10270:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10294:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "10262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10262:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "10262:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10336:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10252:2:0"
									},
									"src": "10234:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10724:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10773:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10765:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10736:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10736:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10731:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10783:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10800:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10792:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10783:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10783:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10714:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10714:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10704:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10724:0:0"
									},
									"scope": 404,
									"src": "10678:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "11015:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "11041:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "11022:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11022:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "11022:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "11005:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11005:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10980:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10979:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11015:0:0"
									},
									"scope": 404,
									"src": "10953:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "11209:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "11224:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11244:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11236:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11236:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11224:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11248:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "11216:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11216:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "11216:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "11330:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "11301:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11301:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "11296:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11346:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11355:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11346:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11346:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "11182:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11181:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11209:0:0"
									},
									"scope": 404,
									"src": "11154:215:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 916,
							"src": "9609:1763:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11398:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11398:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11407:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11407:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11415:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11415:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 915,
							"linearizedBaseContracts": [
								915,
								404,
								88,
								113
							],
							"name": "BEP20USDT",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11434:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11428:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11447:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 915,
									"src": "11461:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11470:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11461:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11481:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 915,
									"src": "11514:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11523:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11514:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11543:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11534:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11554:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 915,
									"src": "11590:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11590:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 915,
									"src": "11623:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11623:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 915,
									"src": "11650:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11650:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 915,
									"src": "11676:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11676:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11723:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11730:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "54657468657220555344",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11738:12:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_9a1ae89798edf3b90847f79f5a01a6aed1a89918d89ec92ed49335597a2f17c1",
															"typeString": "literal_string \"Tether USD\""
														},
														"value": "Tether USD"
													},
													"src": "11730:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11730:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11757:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "55534454",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11767:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
															"typeString": "literal_string \"USDT\""
														},
														"value": "USDT"
													},
													"src": "11757:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11757:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11780:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11792:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11780:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11780:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11801:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3330303030303030303030303030303030303030303030303030",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11816:26:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30000000000000000000000000_by_1",
															"typeString": "int_const 30000000000000000000000000"
														},
														"value": "30000000000000000000000000"
													},
													"src": "11801:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "11801:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 450,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11849:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 453,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "11859:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11859:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11849:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 454,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11873:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11849:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "11849:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11916:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11908:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11908:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "11920:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11920:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11932:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11899:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11899:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "11894:51:0"
											}
										]
									},
									"documentation": null,
									"id": 467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11713:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11723:0:0"
									},
									"scope": 915,
									"src": "11702:249:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "12063:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "12077:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "12070:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12028:2:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "12054:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12053:9:0"
									},
									"scope": 915,
									"src": "12011:79:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "12199:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 481,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "12213:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "12206:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12166:2:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "12192:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12191:7:0"
									},
									"scope": 915,
									"src": "12149:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "12341:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "12355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "12348:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12300:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "12326:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12325:15:0"
									},
									"scope": 915,
									"src": "12285:83:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "12475:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12489:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "12482:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12434:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "12460:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12460:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12459:15:0"
									},
									"scope": 915,
									"src": "12421:79:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "12611:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12625:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "12618:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12576:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "12602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12601:9:0"
									},
									"scope": 915,
									"src": "12556:87:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "12765:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 515,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12779:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "12789:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12779:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 518,
												"nodeType": "Return",
												"src": "12772:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12716:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12715:17:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12755:9:0"
									},
									"scope": 915,
									"src": "12697:106:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "13074:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 530,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13091:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13091:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "13105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "13116:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "13081:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13081:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "13081:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13137:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 528,
												"id": 537,
												"nodeType": "Return",
												"src": "13130:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "13015:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "13034:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13014:35:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "13068:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13068:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13067:6:0"
									},
									"scope": 915,
									"src": "12997:150:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "13284:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 548,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "13298:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 550,
														"indexExpression": {
															"argumentTypes": null,
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "13310:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13298:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"argumentTypes": null,
														"id": 551,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "13317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13298:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "13291:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13220:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13220:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13219:32:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "13275:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13274:9:0"
									},
									"scope": 915,
									"src": "13201:130:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "13535:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13551:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13551:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "13565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "13574:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "13542:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13542:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "13542:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13595:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "13588:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13478:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13495:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13477:33:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13529:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13528:6:0"
									},
									"scope": 915,
									"src": "13461:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "14147:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 586,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "14164:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "14172:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "14183:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "14154:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14154:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "14154:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 592,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "14206:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 593,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14214:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14214:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "14266:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14274:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 595,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14228:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 597,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 596,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "14240:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14228:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 598,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "14248:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14248:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14228:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "14228:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14228:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "14197:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14197:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "14197:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14332:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 584,
												"id": 608,
												"nodeType": "Return",
												"src": "14325:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14072:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14088:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14107:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14071:51:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14141:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14141:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14140:6:0"
									},
									"scope": 915,
									"src": "14050:292:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "14810:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14826:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14826:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "14840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 630,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "14888:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 623,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14849:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 626,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 624,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14861:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14861:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14849:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 628,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "14875:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14849:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14849:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14849:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "14817:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14817:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14817:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14914:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 618,
												"id": 635,
												"nodeType": "Return",
												"src": "14907:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14751:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14768:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14750:37:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14804:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14804:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14803:6:0"
									},
									"scope": 915,
									"src": "14724:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "15487:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 647,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15503:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15503:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 649,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "15517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "15565:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15582:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 650,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "15526:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 653,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 651,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "15538:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15538:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15526:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 654,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "15552:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15526:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15526:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15526:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "15494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15494:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "15494:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15637:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 645,
												"id": 663,
												"nodeType": "Return",
												"src": "15630:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15423:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15440:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15422:42:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "15481:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15481:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15480:6:0"
									},
									"scope": 915,
									"src": "15396:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "15909:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 675,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15922:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15922:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "15936:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "15916:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15916:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "15916:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15957:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 673,
												"id": 681,
												"nodeType": "Return",
												"src": "15950:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n\n   * Requirements\n\n   * - `msg.sender` must be the token owner",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 670,
											"modifierName": {
												"argumentTypes": null,
												"id": 669,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15884:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15884:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15861:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15860:16:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15903:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15902:6:0"
									},
									"scope": 915,
									"src": "15847:120:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "16104:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 691,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "16117:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16117:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 693,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16131:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "16111:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16111:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "16111:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16152:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 689,
												"id": 697,
												"nodeType": "Return",
												"src": "16145:11:0"
											}
										]
									},
									"documentation": "@dev Burn `amount` tokens and decreasing the total supply.",
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "16066:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16065:16:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "16098:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16098:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16097:6:0"
									},
									"scope": 915,
									"src": "16052:110:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "16701:370:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 709,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "16716:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16734:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16726:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16726:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16716:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16738:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "16708:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16708:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "16708:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 718,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "16793:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16814:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16806:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16806:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16793:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16818:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "16785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16785:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "16785:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 726,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16865:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 728,
														"indexExpression": {
															"argumentTypes": null,
															"id": 727,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "16875:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16865:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 733,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "16907:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16915:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 729,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16885:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 731,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 730,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "16895:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16885:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16885:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16885:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16865:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "16865:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 738,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16963:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 740,
														"indexExpression": {
															"argumentTypes": null,
															"id": 739,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "16973:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16963:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 745,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "17011:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 741,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16986:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 743,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 742,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "16996:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16986:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16986:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16986:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16963:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "16963:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 750,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "17039:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 751,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "17047:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 752,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "17058:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 749,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17030:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17030:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "EmitStatement",
												"src": "17025:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "16641:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16641:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "16657:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "16676:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16640:51:0"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16701:0:0"
									},
									"scope": 915,
									"src": "16622:449:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "17389:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 764,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "17404:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17423:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17415:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17415:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17404:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17427:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "17396:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17396:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "17396:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 772,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17470:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 775,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "17502:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 773,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17485:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "17485:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17485:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17470:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "17470:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 779,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17516:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 781,
														"indexExpression": {
															"argumentTypes": null,
															"id": 780,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "17526:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17516:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 786,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "17560:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 782,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17537:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 784,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 783,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "17547:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17537:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "17537:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17537:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17516:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "17516:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17596:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17588:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17588:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 794,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "17600:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 795,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "17609:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 790,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17579:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17579:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "EmitStatement",
												"src": "17574:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address.",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "17347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "17364:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17346:33:0"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17389:0:0"
									},
									"scope": 915,
									"src": "17332:290:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "17987:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 807,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "18002:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18021:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18013:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18013:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18002:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18025:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "17994:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17994:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "17994:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 815,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "18070:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 817,
														"indexExpression": {
															"argumentTypes": null,
															"id": 816,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "18080:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18070:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 822,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "18114:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18122:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 818,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "18091:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 820,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 819,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "18101:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18091:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "18091:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18091:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18070:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "18070:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 827,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "18166:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 830,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "18198:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 828,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "18181:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "18181:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18181:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18166:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "18166:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 835,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "18226:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18243:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18235:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18235:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 839,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "18247:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 834,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "18217:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18217:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "EmitStatement",
												"src": "18212:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "17945:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "17962:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17944:33:0"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17987:0:0"
									},
									"scope": 915,
									"src": "17930:330:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "18747:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 853,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "18762:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18779:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18771:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18771:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18762:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18783:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "18754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18754:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "18754:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 862,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "18837:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18856:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18848:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18848:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18837:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18860:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															933,
															934
														],
														"referencedDeclaration": 934,
														"src": "18829:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18829:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "18829:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 870,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18906:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 873,
															"indexExpression": {
																"argumentTypes": null,
																"id": 871,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "18918:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18906:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 874,
														"indexExpression": {
															"argumentTypes": null,
															"id": 872,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "18925:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18906:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 875,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "18936:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18906:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "18906:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 879,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "18963:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 880,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "18970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 881,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "18979:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18954:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18954:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "EmitStatement",
												"src": "18949:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "18690:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "18705:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "18722:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18689:48:0"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18747:0:0"
									},
									"scope": 915,
									"src": "18672:320:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "19225:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 893,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "19238:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 894,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "19247:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "19232:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19232:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "19232:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 898,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "19270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 899,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "19279:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19279:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 908,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "19332:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19340:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 901,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "19293:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 903,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 902,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 887,
																			"src": "19305:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19293:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 906,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 904,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "19314:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19314:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "19293:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "19293:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19293:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 897,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "19261:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19261:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "19261:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n   * See {_burn} and {_approve}.",
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "19183:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "19200:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19182:33:0"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19225:0:0"
									},
									"scope": 915,
									"src": "19164:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 916,
							"src": "11376:8013:0"
						}
					],
					"src": "70:19319:0"
				},
				"id": 0
			}
		}
	}
}